// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/apps/installed": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取已安装应用列表",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Search app list installed",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AppInstalledSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/apps/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取应用列表",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Search app list",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AppSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/backups": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "创建备份账号",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "Create backup account",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BackupOperate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "type"
                    ],
                    "formatEN": "create backup account [type]",
                    "formatZH": "创建备份账号 [type]",
                    "paramKeys": []
                }
            }
        },
        "/backups/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "删除备份账号",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "Delete backup account",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchDeleteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [
                        {
                            "db": "backup_accounts",
                            "input_colume": "id",
                            "input_value": "ids",
                            "isList": true,
                            "output_colume": "type",
                            "output_value": "types"
                        }
                    ],
                    "bodyKeys": [
                        "ids"
                    ],
                    "formatEN": "delete backup account [types]",
                    "formatZH": "删除备份账号 [types]",
                    "paramKeys": []
                }
            }
        },
        "/backups/record/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "删除备份记录",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "Delete backup record",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchDeleteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [
                        {
                            "db": "backup_records",
                            "input_colume": "id",
                            "input_value": "ids",
                            "isList": true,
                            "output_colume": "file_name",
                            "output_value": "files"
                        }
                    ],
                    "bodyKeys": [
                        "ids"
                    ],
                    "formatEN": "delete backup records [files]",
                    "formatZH": "删除备份记录 [files]",
                    "paramKeys": []
                }
            }
        },
        "/backups/record/download": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "下载备份记录",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "Download backup record",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DownloadRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "source",
                        "fileName"
                    ],
                    "formatEN": "download backup records [source][fileName]",
                    "formatZH": "下载备份记录 [source][fileName]",
                    "paramKeys": []
                }
            }
        },
        "/backups/record/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取备份记录列表分页",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "Search backup records with page",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RecordSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/backups/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取 bucket 列表",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "List bucket",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ForBuckets"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "anrry"
                        }
                    }
                }
            }
        },
        "/backups/update": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取备份账号列表",
                "tags": [
                    "Backup Account"
                ],
                "summary": "Search backup account",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "anrry"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "更新备份账号信息",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Backup Account"
                ],
                "summary": "Update backup account",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BackupOperate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "type"
                    ],
                    "formatEN": "update backup account [types]",
                    "formatZH": "更新备份账号 [types]",
                    "paramKeys": []
                }
            }
        },
        "/commands": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取快速命令列表",
                "tags": [
                    "Command"
                ],
                "summary": "Search command",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CommandInfo"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取快速命令列表分页",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Command"
                ],
                "summary": "Search command with page",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchWithPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/commands/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "删除快速命令",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Command"
                ],
                "summary": "Delete command",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchDeleteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [
                        {
                            "db": "commands",
                            "input_colume": "id",
                            "input_value": "ids",
                            "isList": true,
                            "output_colume": "name",
                            "output_value": "names"
                        }
                    ],
                    "bodyKeys": [
                        "ids"
                    ],
                    "formatEN": "delete quick command [names]",
                    "formatZH": "删除快捷命令 [names]",
                    "paramKeys": []
                }
            }
        },
        "/commands/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "更新快速命令",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Command"
                ],
                "summary": "Update command",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CommandOperate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "update quick command [name]",
                    "formatZH": "更新快捷命令 [name]",
                    "paramKeys": []
                }
            }
        },
        "/containers": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "创建容器",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container"
                ],
                "summary": "Create container",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ContainerCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "name",
                        "image"
                    ],
                    "formatEN": "create container [name][image]",
                    "formatZH": "创建容器 [name][image]",
                    "paramKeys": []
                }
            }
        },
        "/containers/compose": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "创建容器编排",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Compose"
                ],
                "summary": "Create compose",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ComposeCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "create compose [name]",
                    "formatZH": "创建 compose [name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/compose/operate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "容器编排操作",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Compose"
                ],
                "summary": "Operate compose",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ComposeOperation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "name",
                        "operation"
                    ],
                    "formatEN": "compose [operation] [name]",
                    "formatZH": "compose [operation] [name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/compose/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取编排列表分页",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Compose"
                ],
                "summary": "Search compose list with page",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PageInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/containers/compose/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "更新容器编排",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Compose"
                ],
                "summary": "Update compose",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ComposeUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "update compose information [name]",
                    "formatZH": "更新 compose [name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/daemonjson": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取 docker 配置信息",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Docker"
                ],
                "summary": "Load docker daemon.json",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DaemonJsonConf"
                        }
                    }
                }
            }
        },
        "/containers/daemonjson/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "修改 docker 配置信息",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Docker"
                ],
                "summary": "Update docker daemon.json",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DaemonJsonConf"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [],
                    "formatEN": "Updated the docker daemon.json configuration",
                    "formatZH": "更新 docker daemon.json 配置",
                    "paramKeys": []
                }
            }
        },
        "/containers/daemonjson/update/byfile": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "上传替换 docker 配置文件",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Docker"
                ],
                "summary": "Update docker daemon.json by upload file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DaemonJsonUpdateByFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [],
                    "formatEN": "Updated the docker daemon.json configuration",
                    "formatZH": "更新 docker daemon.json 配置",
                    "paramKeys": []
                }
            }
        },
        "/containers/docker/operate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Docker 操作",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Docker"
                ],
                "summary": "Operate docker",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DockerOperation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "operation"
                    ],
                    "formatEN": "[operation] docker service",
                    "formatZH": "docker 服务 [operation]",
                    "paramKeys": []
                }
            }
        },
        "/containers/docker/status": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取 docker 服务状态",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Docker"
                ],
                "summary": "Load docker status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/containers/image": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取镜像列表",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Image"
                ],
                "summary": "Search image list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "anrry"
                        }
                    }
                }
            }
        },
        "/containers/image/build": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "构建镜像",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Image"
                ],
                "summary": "Build image",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ImageBuild"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "build image [name]",
                    "formatZH": "构建镜像 [name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/image/load": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "导入镜像",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Image"
                ],
                "summary": "Load image",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ImageLoad"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "path"
                    ],
                    "formatEN": "load image from [path]",
                    "formatZH": "从 [path] 加载镜像",
                    "paramKeys": []
                }
            }
        },
        "/containers/image/pull": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "拉取镜像",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Image"
                ],
                "summary": "Pull image",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ImagePull"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [
                        {
                            "db": "image_repos",
                            "input_colume": "id",
                            "input_value": "repoID",
                            "isList": false,
                            "output_colume": "name",
                            "output_value": "reponame"
                        }
                    ],
                    "bodyKeys": [
                        "repoID",
                        "imageName"
                    ],
                    "formatEN": "image pull [reponame][imageName]",
                    "formatZH": "镜像拉取 [reponame][imageName]",
                    "paramKeys": []
                }
            }
        },
        "/containers/image/push": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "推送镜像",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Image"
                ],
                "summary": "Push image",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ImagePush"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [
                        {
                            "db": "image_repos",
                            "input_colume": "id",
                            "input_value": "repoID",
                            "isList": false,
                            "output_colume": "name",
                            "output_value": "reponame"
                        }
                    ],
                    "bodyKeys": [
                        "repoID",
                        "tagName",
                        "name"
                    ],
                    "formatEN": "push [tagName] to [reponame][name]",
                    "formatZH": "[tagName] 推送到 [reponame][name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/image/remove": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "删除镜像",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Image"
                ],
                "summary": "Delete image",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "names"
                    ],
                    "formatEN": "remove image [names]",
                    "formatZH": "移除镜像 [names]",
                    "paramKeys": []
                }
            }
        },
        "/containers/image/save": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "导出镜像",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Image"
                ],
                "summary": "Save image",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ImageSave"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "tagName",
                        "path",
                        "name"
                    ],
                    "formatEN": "save [tagName] as [path]/[name]",
                    "formatZH": "保留 [tagName] 为 [path]/[name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/image/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取镜像列表分页",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Image"
                ],
                "summary": "Search image list with page",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PageInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/containers/image/tag": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Tag 镜像",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Image"
                ],
                "summary": "Tag image",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ImageTag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [
                        {
                            "db": "image_repos",
                            "input_colume": "id",
                            "input_value": "repoID",
                            "isList": false,
                            "output_colume": "name",
                            "output_value": "reponame"
                        }
                    ],
                    "bodyKeys": [
                        "repoID",
                        "targetName"
                    ],
                    "formatEN": "tag image [reponame][targetName]",
                    "formatZH": "tag 镜像 [reponame][targetName]",
                    "paramKeys": []
                }
            }
        },
        "/containers/inspect": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "容器详情",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container"
                ],
                "summary": "Container inspect",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.InspectReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/containers/network": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "创建容器网络",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Network"
                ],
                "summary": "Create network",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.NetworkCreat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "create container network [name]",
                    "formatZH": "创建容器网络 name",
                    "paramKeys": []
                }
            }
        },
        "/containers/network/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "删除容器网络",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Network"
                ],
                "summary": "Delete network",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "names"
                    ],
                    "formatEN": "delete container network [names]",
                    "formatZH": "删除容器网络 [names]",
                    "paramKeys": []
                }
            }
        },
        "/containers/network/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取容器网络列表分页",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Network"
                ],
                "summary": "Search network list with page",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PageInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/containers/operate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "容器操作",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container"
                ],
                "summary": "Operate Container",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ContainerOperation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "name",
                        "operation",
                        "newName"
                    ],
                    "formatEN": "container [operation] [name] [newName]",
                    "formatZH": "容器 [name] 执行 [operation] [newName]",
                    "paramKeys": []
                }
            }
        },
        "/containers/repo": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取镜像仓库列表",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Image-repo"
                ],
                "summary": "Search image repo list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "anrry"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "创建镜像仓库",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Image-repo"
                ],
                "summary": "Create image repo",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ImageRepoCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "create image repo [name]",
                    "formatZH": "创建镜像仓库 [name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/repo/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "删除镜像仓库",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Image-repo"
                ],
                "summary": "Delete image repo",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ImageRepoDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [
                        {
                            "db": "image_repos",
                            "input_colume": "id",
                            "input_value": "ids",
                            "isList": true,
                            "output_colume": "name",
                            "output_value": "names"
                        }
                    ],
                    "bodyKeys": [
                        "ids"
                    ],
                    "formatEN": "delete image repo [names]",
                    "formatZH": "删除镜像仓库 [names]",
                    "paramKeys": []
                }
            }
        },
        "/containers/repo/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取镜像仓库列表分页",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Image-repo"
                ],
                "summary": "Search image repo list with page",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PageInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/containers/repo/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "更新镜像仓库",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Image-repo"
                ],
                "summary": "Update image repo",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ImageRepoUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [
                        {
                            "db": "image_repos",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_colume": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "update image repo information [name]",
                    "formatZH": "更新镜像仓库 [name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取容器列表分页",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container"
                ],
                "summary": "Search container list with page",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PageContainer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/containers/search/log": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "容器日志",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container"
                ],
                "summary": "Container logs",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ContainerLog"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/containers/stats/:id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "容器监控信息",
                "tags": [
                    "Container"
                ],
                "summary": "Container stats",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "容器id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ContainterStats"
                        }
                    }
                }
            }
        },
        "/containers/template": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取容器编排模版列表",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Compose-template"
                ],
                "summary": "Search compose template list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "anrry"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "创建容器编排模版",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Compose-template"
                ],
                "summary": "Create Compose template",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ComposeTemplateCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "create compose template [name]",
                    "formatZH": "创建 compose 模版 [name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/template/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "删除容器编排模版",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Compose-template"
                ],
                "summary": "Delete compose template",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [
                        {
                            "db": "compose_templates",
                            "input_colume": "id",
                            "input_value": "ids",
                            "isList": true,
                            "output_colume": "name",
                            "output_value": "names"
                        }
                    ],
                    "bodyKeys": [
                        "ids"
                    ],
                    "formatEN": "delete compose template [names]",
                    "formatZH": "删除 compose 模版 [names]",
                    "paramKeys": []
                }
            }
        },
        "/containers/template/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取容器编排模版列表分页",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Compose-template"
                ],
                "summary": "Search compose template list with page",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PageInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/containers/template/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "更新容器编排模版",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Compose-template"
                ],
                "summary": "Update compose template",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ComposeTemplateUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [
                        {
                            "db": "compose_templates",
                            "input_colume": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_colume": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "update compose template information [name]",
                    "formatZH": "更新 compose 模版 [name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/volume": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "创建容器存储卷",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Volume"
                ],
                "summary": "Create volume",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VolumeCreat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "create container volume [name]",
                    "formatZH": "创建容器存储卷 [name]",
                    "paramKeys": []
                }
            }
        },
        "/containers/volume/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "删除容器存储卷",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Container Volume"
                ],
                "summary": "Delete volume",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "names"
                    ],
                    "formatEN": "delete container volume [names]",
                    "formatZH": "删除容器存储卷 [names]",
                    "paramKeys": []
                }
            }
        },
        "/containers/volume/search": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取容器存储卷列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Volume"
                ],
                "summary": "Search volume list",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PageInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取容器存储卷分页",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Container Volume"
                ],
                "summary": "Search volume list with page",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PageInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/cronjob/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "删除计划任务",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cronjob"
                ],
                "summary": "Delete cronjob",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchDeleteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [
                        {
                            "db": "cronjobs",
                            "input_colume": "id",
                            "input_value": "ids",
                            "isList": true,
                            "output_colume": "name",
                            "output_value": "names"
                        }
                    ],
                    "bodyKeys": [
                        "ids"
                    ],
                    "formatEN": "delete cronjob [names]",
                    "formatZH": "删除计划任务 [names]",
                    "paramKeys": []
                }
            }
        },
        "/cronjob/download": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "下载计划任务记录",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cronjob"
                ],
                "summary": "Download Cronjob records",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CronjobDownload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [
                        {
                            "db": "job_records",
                            "input_colume": "id",
                            "input_value": "recordID",
                            "isList": false,
                            "output_colume": "file",
                            "output_value": "file"
                        }
                    ],
                    "bodyKeys": [
                        "recordID"
                    ],
                    "formatEN": "download the cronjob record [file]",
                    "formatZH": "下载计划任务记录 [file]",
                    "paramKeys": []
                }
            }
        },
        "/cronjob/handle": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "手动执行计划任务",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cronjob"
                ],
                "summary": "Handle cronjob once",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperateByID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [
                        {
                            "db": "cronjobs",
                            "input_colume": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_colume": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "manually execute the cronjob [name]",
                    "formatZH": "手动执行计划任务 [name]",
                    "paramKeys": []
                }
            }
        },
        "/cronjob/status": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "更新计划任务状态",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cronjob"
                ],
                "summary": "Update cronjob status",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CronjobUpdateStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [
                        {
                            "db": "cronjobs",
                            "input_colume": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_colume": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id",
                        "status"
                    ],
                    "formatEN": "change the status of cronjob [name] to [status].",
                    "formatZH": "修改计划任务 [name] 状态为 [status]",
                    "paramKeys": []
                }
            }
        },
        "/cronjob/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "更新计划任务",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cronjob"
                ],
                "summary": "Update cronjob",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CronjobUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [
                        {
                            "db": "cronjobs",
                            "input_colume": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_colume": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "update cronjob [name]",
                    "formatZH": "更新计划任务 [name]",
                    "paramKeys": []
                }
            }
        },
        "/cronjobs": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "创建计划任务",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cronjob"
                ],
                "summary": "Create cronjob",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CronjobCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "type",
                        "name"
                    ],
                    "formatEN": "create cronjob [type][name]",
                    "formatZH": "创建计划任务 [type][name]",
                    "paramKeys": []
                }
            }
        },
        "/cronjobs/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取计划任务分页",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cronjob"
                ],
                "summary": "Search cronjob list with page",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchWithPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/cronjobs/search/records": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取计划任务记录",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cronjob"
                ],
                "summary": "Search job records",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/databases": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "创建 mysql 数据库",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Create mysql database",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MysqlDBCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "name"
                    ],
                    "formatEN": "create mysql database [name]",
                    "formatZH": "创建 mysql 数据库 [name]",
                    "paramKeys": []
                }
            }
        },
        "/databases/backup": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "备份 mysql 数据库",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Backup mysql database",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BackupDB"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "mysqlName",
                        "dbName"
                    ],
                    "formatEN": "backup mysql database [mysqlName][dbName]",
                    "formatZH": "备份 mysql 数据库 [mysqlName][dbName]",
                    "paramKeys": []
                }
            }
        },
        "/databases/baseinfo": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取 mysql 基础信息",
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Load mysql base info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DBBaseInfo"
                        }
                    }
                }
            }
        },
        "/databases/change/access": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "修改 mysql 访问权限",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Change mysql access",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangeDBInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [
                        {
                            "db": "database_mysqls",
                            "input_colume": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_colume": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "Update database [name] access",
                    "formatZH": "更新数据库 [name] 访问权限",
                    "paramKeys": []
                }
            }
        },
        "/databases/change/password": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "修改 mysql 密码",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Change mysql password",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangeDBInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [
                        {
                            "db": "database_mysqls",
                            "input_colume": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_colume": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "Update database [name] password",
                    "formatZH": "更新数据库 [name] 密码",
                    "paramKeys": []
                }
            }
        },
        "/databases/conffile/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "上传替换 mysql 配置文件",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Update mysql conf by upload file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MysqlConfUpdateByFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [],
                    "formatEN": "update the mysql database configuration information",
                    "formatZH": "更新 mysql 数据库配置信息",
                    "paramKeys": []
                }
            }
        },
        "/databases/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "删除 mysql 数据库",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Delete mysql database",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MysqlDBDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [
                        {
                            "db": "database_mysqls",
                            "input_colume": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_colume": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "delete mysql database [name]",
                    "formatZH": "删除 mysql 数据库 [name]",
                    "paramKeys": []
                }
            }
        },
        "/databases/del/check": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Mysql 数据库删除前检查",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Check before delete mysql database",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperateByID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "anrry"
                        }
                    }
                }
            }
        },
        "/databases/description/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "更新 mysql 数据库库描述信息",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Update mysql database description",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MysqlDescription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [
                        {
                            "db": "database_mysqls",
                            "input_colume": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_colume": "name",
                            "output_value": "name"
                        }
                    ],
                    "bodyKeys": [
                        "id",
                        "description"
                    ],
                    "formatEN": "The description of the mysql database [name] is modified =\u003e [description]",
                    "formatZH": "mysql 数据库 [name] 描述信息修改 [description]",
                    "paramKeys": []
                }
            }
        },
        "/databases/options": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取 mysql 数据库列表",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cronjob"
                ],
                "summary": "Search mysql database list",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PageInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "anrry"
                        }
                    }
                }
            }
        },
        "/databases/recover": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Mysql 数据库恢复",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Recover mysql database",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RecoverDB"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "mysqlName",
                        "dbName",
                        "backupName"
                    ],
                    "formatEN": "恢复 mysql 数据库 [mysqlName][dbName] [backupName]",
                    "formatZH": "恢复 mysql 数据库 [mysqlName][dbName] [backupName]",
                    "paramKeys": []
                }
            }
        },
        "/databases/recover/byupload": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Mysql 数据库从上传文件恢复",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Recover mysql database by upload file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UploadRecover"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "fileDir",
                        "fileName",
                        "mysqlName",
                        "dbName"
                    ],
                    "formatEN": "mysql database recover [fileDir]/[fileName] from [mysqlName][dbName]",
                    "formatZH": "mysql 数据库从 [fileDir]/[fileName] 恢复 [mysqlName][dbName]",
                    "paramKeys": []
                }
            }
        },
        "/databases/redis/backup": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "备份 redis 数据库",
                "tags": [
                    "Database Redis"
                ],
                "summary": "Backup redis",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [],
                    "formatEN": "backup redis database",
                    "formatZH": "备份 redis 数据库",
                    "paramKeys": []
                }
            }
        },
        "/databases/redis/backup/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取 redis 备份记录分页",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Redis"
                ],
                "summary": "Search redis backup list",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PageInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/databases/redis/conf": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取 redis 配置信息",
                "tags": [
                    "Database Redis"
                ],
                "summary": "Load redis conf",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RedisConf"
                        }
                    }
                }
            }
        },
        "/databases/redis/conf/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "更新 redis 配置信息",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Redis"
                ],
                "summary": "Update redis conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RedisConfUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [],
                    "formatEN": "update the redis database configuration information",
                    "formatZH": "更新 redis 数据库配置信息",
                    "paramKeys": []
                }
            }
        },
        "/databases/redis/conffile/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "上传更新 redis 配置信息",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Redis"
                ],
                "summary": "Update redis conf by file",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RedisConfUpdateByFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [],
                    "formatEN": "update the redis database configuration information",
                    "formatZH": "更新 redis 数据库配置信息",
                    "paramKeys": []
                }
            }
        },
        "/databases/redis/password": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "更新 redis 密码",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Redis"
                ],
                "summary": "Change redis password",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangeDBInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [],
                    "formatEN": "change the password of the redis database",
                    "formatZH": "修改 redis 数据库密码",
                    "paramKeys": []
                }
            }
        },
        "/databases/redis/persistence/conf": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取 redis 持久化配置",
                "tags": [
                    "Database Redis"
                ],
                "summary": "Load redis persistence conf",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RedisPersistence"
                        }
                    }
                }
            }
        },
        "/databases/redis/persistence/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "更新 redis 持久化配置",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Redis"
                ],
                "summary": "Update redis persistence conf",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RedisConfPersistenceUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [],
                    "formatEN": "redis database persistence configuration update",
                    "formatZH": "redis 数据库持久化配置更新",
                    "paramKeys": []
                }
            }
        },
        "/databases/redis/recover": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "恢复 redis 数据库",
                "tags": [
                    "Database Redis"
                ],
                "summary": "Recover redis",
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [
                        "fileDir",
                        "fileName"
                    ],
                    "formatEN": "redis database recover from [fileDir]/[fileName]",
                    "formatZH": "redis 数据库从 [fileDir]/[fileName] 恢复",
                    "paramKeys": []
                }
            }
        },
        "/databases/redis/status": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取 redis 状态信息",
                "tags": [
                    "Database Redis"
                ],
                "summary": "Load redis status info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RedisStatus"
                        }
                    }
                }
            }
        },
        "/databases/remote": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取 mysql 远程访问权限",
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Load mysql remote access",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "bool"
                        }
                    }
                }
            }
        },
        "/databases/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取 mysql 数据库列表分页",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Cronjob"
                ],
                "summary": "Search mysql database list with page",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PageInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/databases/status": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取 mysql 状态信息",
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Load mysql status info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MysqlStatus"
                        }
                    }
                }
            }
        },
        "/databases/variables": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取 mysql 性能参数信息",
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Load mysql variables info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MysqlVariables"
                        }
                    }
                }
            }
        },
        "/databases/variables/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "mysql 性能调优",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Database Mysql"
                ],
                "summary": "Update mysql variables",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MysqlVariablesUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "x-panel-log": {
                    "BeforeFuntions": [],
                    "bodyKeys": [],
                    "formatEN": "adjust mysql database performance parameters",
                    "formatZH": "调整 mysql 数据库性能参数",
                    "paramKeys": []
                }
            }
        }
    },
    "definitions": {
        "dto.BackupDB": {
            "type": "object",
            "required": [
                "dbName",
                "mysqlName"
            ],
            "properties": {
                "dbName": {
                    "type": "string"
                },
                "mysqlName": {
                    "type": "string"
                }
            }
        },
        "dto.BackupOperate": {
            "type": "object",
            "required": [
                "type",
                "vars"
            ],
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "credential": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "vars": {
                    "type": "string"
                }
            }
        },
        "dto.BatchDelete": {
            "type": "object",
            "required": [
                "names"
            ],
            "properties": {
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.BatchDeleteReq": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dto.ChangeDBInfo": {
            "type": "object",
            "required": [
                "value"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.CommandInfo": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CommandOperate": {
            "type": "object",
            "required": [
                "command",
                "name"
            ],
            "properties": {
                "command": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.ComposeCreate": {
            "type": "object",
            "required": [
                "from",
                "name"
            ],
            "properties": {
                "file": {
                    "type": "string"
                },
                "from": {
                    "type": "string",
                    "enum": [
                        "edit",
                        "path",
                        "template"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "template": {
                    "type": "integer"
                }
            }
        },
        "dto.ComposeOperation": {
            "type": "object",
            "required": [
                "name",
                "operation",
                "path"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "start",
                        "stop",
                        "down"
                    ]
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "dto.ComposeTemplateCreate": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.ComposeTemplateUpdate": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.ComposeUpdate": {
            "type": "object",
            "required": [
                "content",
                "name",
                "path"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "dto.ContainerCreate": {
            "type": "object",
            "properties": {
                "autoRemove": {
                    "type": "boolean"
                },
                "cmd": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "env": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exposedPorts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PortHelper"
                    }
                },
                "image": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "memory": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nanoCPUs": {
                    "type": "integer"
                },
                "publishAllPorts": {
                    "type": "boolean"
                },
                "restartPolicy": {
                    "type": "string"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.VolumeHelper"
                    }
                }
            }
        },
        "dto.ContainerLog": {
            "type": "object",
            "required": [
                "containerID",
                "mode"
            ],
            "properties": {
                "containerID": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            }
        },
        "dto.ContainerOperation": {
            "type": "object",
            "required": [
                "name",
                "operation"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "newName": {
                    "type": "string"
                },
                "operation": {
                    "type": "string",
                    "enum": [
                        "start",
                        "stop",
                        "restart",
                        "kill",
                        "pause",
                        "unpause",
                        "rename",
                        "remove"
                    ]
                }
            }
        },
        "dto.ContainterStats": {
            "type": "object",
            "properties": {
                "cache": {
                    "type": "number"
                },
                "cpuPercent": {
                    "type": "number"
                },
                "ioRead": {
                    "type": "number"
                },
                "ioWrite": {
                    "type": "number"
                },
                "memory": {
                    "type": "number"
                },
                "networkRX": {
                    "type": "number"
                },
                "networkTX": {
                    "type": "number"
                },
                "shotTime": {
                    "type": "string"
                }
            }
        },
        "dto.CronjobCreate": {
            "type": "object",
            "required": [
                "name",
                "specType",
                "type"
            ],
            "properties": {
                "day": {
                    "type": "integer",
                    "maximum": 31,
                    "minimum": 1
                },
                "dbName": {
                    "type": "string"
                },
                "exclusionRules": {
                    "type": "string"
                },
                "hour": {
                    "type": "integer",
                    "maximum": 23,
                    "minimum": 0
                },
                "keepLocal": {
                    "type": "boolean"
                },
                "minute": {
                    "type": "integer",
                    "maximum": 59,
                    "minimum": 0
                },
                "name": {
                    "type": "string"
                },
                "retainCopies": {
                    "type": "integer",
                    "minimum": 1
                },
                "script": {
                    "type": "string"
                },
                "sourceDir": {
                    "type": "string"
                },
                "specType": {
                    "type": "string"
                },
                "targetDirID": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                },
                "week": {
                    "type": "integer",
                    "maximum": 7,
                    "minimum": 1
                }
            }
        },
        "dto.CronjobDownload": {
            "type": "object",
            "required": [
                "backupAccountID",
                "recordID"
            ],
            "properties": {
                "backupAccountID": {
                    "type": "integer"
                },
                "recordID": {
                    "type": "integer"
                }
            }
        },
        "dto.CronjobUpdate": {
            "type": "object",
            "required": [
                "id",
                "name",
                "specType"
            ],
            "properties": {
                "day": {
                    "type": "integer",
                    "maximum": 31,
                    "minimum": 1
                },
                "dbName": {
                    "type": "string"
                },
                "exclusionRules": {
                    "type": "string"
                },
                "hour": {
                    "type": "integer",
                    "maximum": 23,
                    "minimum": 0
                },
                "id": {
                    "type": "integer"
                },
                "keepLocal": {
                    "type": "boolean"
                },
                "minute": {
                    "type": "integer",
                    "maximum": 59,
                    "minimum": 0
                },
                "name": {
                    "type": "string"
                },
                "retainCopies": {
                    "type": "integer",
                    "minimum": 1
                },
                "script": {
                    "type": "string"
                },
                "sourceDir": {
                    "type": "string"
                },
                "specType": {
                    "type": "string"
                },
                "targetDirID": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                },
                "week": {
                    "type": "integer",
                    "maximum": 7,
                    "minimum": 1
                }
            }
        },
        "dto.CronjobUpdateStatus": {
            "type": "object",
            "required": [
                "id",
                "status"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.DBBaseInfo": {
            "type": "object",
            "properties": {
                "containerName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                }
            }
        },
        "dto.DaemonJsonConf": {
            "type": "object",
            "properties": {
                "cgroupDriver": {
                    "type": "string"
                },
                "insecureRegistries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "liveRestore": {
                    "type": "boolean"
                },
                "registryMirrors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.DaemonJsonUpdateByFile": {
            "type": "object",
            "required": [
                "path"
            ],
            "properties": {
                "file": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "dto.DockerOperation": {
            "type": "object",
            "required": [
                "operation"
            ],
            "properties": {
                "operation": {
                    "type": "string",
                    "enum": [
                        "start",
                        "restart",
                        "stop"
                    ]
                }
            }
        },
        "dto.DownloadRecord": {
            "type": "object",
            "required": [
                "fileDir",
                "fileName",
                "source"
            ],
            "properties": {
                "fileDir": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "source": {
                    "type": "string",
                    "enum": [
                        "OSS",
                        "S3",
                        "SFTP",
                        "MINIO",
                        "LOCAL"
                    ]
                }
            }
        },
        "dto.ForBuckets": {
            "type": "object",
            "required": [
                "credential",
                "type",
                "vars"
            ],
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "credential": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vars": {
                    "type": "string"
                }
            }
        },
        "dto.ImageBuild": {
            "type": "object",
            "required": [
                "dockerfile",
                "from",
                "name"
            ],
            "properties": {
                "dockerfile": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.ImageLoad": {
            "type": "object",
            "required": [
                "path"
            ],
            "properties": {
                "path": {
                    "type": "string"
                }
            }
        },
        "dto.ImagePull": {
            "type": "object",
            "required": [
                "imageName"
            ],
            "properties": {
                "imageName": {
                    "type": "string"
                },
                "repoID": {
                    "type": "integer"
                }
            }
        },
        "dto.ImagePush": {
            "type": "object",
            "required": [
                "name",
                "repoID",
                "tagName"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "repoID": {
                    "type": "integer"
                },
                "tagName": {
                    "type": "string"
                }
            }
        },
        "dto.ImageRepoCreate": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "auth": {
                    "type": "boolean"
                },
                "downloadUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.ImageRepoDelete": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "deleteInsecure": {
                    "type": "boolean"
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dto.ImageRepoUpdate": {
            "type": "object",
            "properties": {
                "auth": {
                    "type": "boolean"
                },
                "downloadUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.ImageSave": {
            "type": "object",
            "required": [
                "name",
                "path",
                "tagName"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "tagName": {
                    "type": "string"
                }
            }
        },
        "dto.ImageTag": {
            "type": "object",
            "required": [
                "sourceID",
                "targetName"
            ],
            "properties": {
                "repoID": {
                    "type": "integer"
                },
                "sourceID": {
                    "type": "string"
                },
                "targetName": {
                    "type": "string"
                }
            }
        },
        "dto.InspectReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.MysqlConfUpdateByFile": {
            "type": "object",
            "required": [
                "mysqlName"
            ],
            "properties": {
                "file": {
                    "type": "string"
                },
                "mysqlName": {
                    "type": "string"
                }
            }
        },
        "dto.MysqlDBCreate": {
            "type": "object",
            "required": [
                "format",
                "name",
                "password",
                "permission",
                "username"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "format": {
                    "type": "string",
                    "enum": [
                        "utf8mb4",
                        "utf8",
                        "gbk",
                        "big5"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.MysqlDBDelete": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "deleteBackup": {
                    "type": "boolean"
                },
                "forceDelete": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.MysqlDescription": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.MysqlStatus": {
            "type": "object",
            "properties": {
                "Aborted_clients": {
                    "type": "string"
                },
                "Aborted_connects": {
                    "type": "string"
                },
                "Bytes_received": {
                    "type": "string"
                },
                "Bytes_sent": {
                    "type": "string"
                },
                "Com_commit": {
                    "type": "string"
                },
                "Com_rollback": {
                    "type": "string"
                },
                "Connections": {
                    "type": "string"
                },
                "Created_tmp_disk_tables": {
                    "type": "string"
                },
                "Created_tmp_tables": {
                    "type": "string"
                },
                "File": {
                    "type": "string"
                },
                "Innodb_buffer_pool_pages_dirty": {
                    "type": "string"
                },
                "Innodb_buffer_pool_read_requests": {
                    "type": "string"
                },
                "Innodb_buffer_pool_reads": {
                    "type": "string"
                },
                "Key_read_requests": {
                    "type": "string"
                },
                "Key_reads": {
                    "type": "string"
                },
                "Key_write_requests": {
                    "type": "string"
                },
                "Key_writes": {
                    "type": "string"
                },
                "Max_used_connections": {
                    "type": "string"
                },
                "Open_tables": {
                    "type": "string"
                },
                "Opened_files": {
                    "type": "string"
                },
                "Opened_tables": {
                    "type": "string"
                },
                "Position": {
                    "type": "string"
                },
                "Qcache_hits": {
                    "type": "string"
                },
                "Qcache_inserts": {
                    "type": "string"
                },
                "Questions": {
                    "type": "string"
                },
                "Run": {
                    "type": "string"
                },
                "Select_full_join": {
                    "type": "string"
                },
                "Select_range_check": {
                    "type": "string"
                },
                "Sort_merge_passes": {
                    "type": "string"
                },
                "Table_locks_waited": {
                    "type": "string"
                },
                "Threads_cached": {
                    "type": "string"
                },
                "Threads_connected": {
                    "type": "string"
                },
                "Threads_created": {
                    "type": "string"
                },
                "Threads_running": {
                    "type": "string"
                },
                "Uptime": {
                    "type": "string"
                }
            }
        },
        "dto.MysqlVariables": {
            "type": "object",
            "properties": {
                "binlog_cache_size": {
                    "type": "string"
                },
                "innodb_buffer_pool_size": {
                    "type": "string"
                },
                "innodb_log_buffer_size": {
                    "type": "string"
                },
                "join_buffer_size": {
                    "type": "string"
                },
                "key_buffer_size": {
                    "type": "string"
                },
                "long_query_time": {
                    "type": "string"
                },
                "max_connections": {
                    "type": "string"
                },
                "max_heap_table_size": {
                    "type": "string"
                },
                "query_cache_size": {
                    "type": "string"
                },
                "query_cache_type": {
                    "type": "string"
                },
                "read_buffer_size": {
                    "type": "string"
                },
                "read_rnd_buffer_size": {
                    "type": "string"
                },
                "slow_query_log": {
                    "type": "string"
                },
                "sort_buffer_size": {
                    "type": "string"
                },
                "table_open_cache": {
                    "type": "string"
                },
                "thread_cache_size": {
                    "type": "string"
                },
                "thread_stack": {
                    "type": "string"
                },
                "tmp_table_size": {
                    "type": "string"
                }
            }
        },
        "dto.MysqlVariablesUpdate": {
            "type": "object",
            "properties": {
                "param": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "dto.NetworkCreat": {
            "type": "object",
            "properties": {
                "driver": {
                    "type": "string"
                },
                "gateway": {
                    "type": "string"
                },
                "ipRange": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subnet": {
                    "type": "string"
                }
            }
        },
        "dto.OperateByID": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.PageContainer": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "filters": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "dto.PageInfo": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "dto.PageResult": {
            "type": "object",
            "properties": {
                "items": {},
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.PortHelper": {
            "type": "object",
            "properties": {
                "containerPort": {
                    "type": "integer"
                },
                "hostPort": {
                    "type": "integer"
                }
            }
        },
        "dto.RecordSearch": {
            "type": "object",
            "required": [
                "name",
                "page",
                "pageSize",
                "type"
            ],
            "properties": {
                "detailName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.RecoverDB": {
            "type": "object",
            "required": [
                "backupName",
                "dbName",
                "mysqlName"
            ],
            "properties": {
                "backupName": {
                    "type": "string"
                },
                "dbName": {
                    "type": "string"
                },
                "mysqlName": {
                    "type": "string"
                }
            }
        },
        "dto.RedisConf": {
            "type": "object",
            "properties": {
                "containerName": {
                    "type": "string"
                },
                "maxclients": {
                    "type": "string"
                },
                "maxmemory": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "requirepass": {
                    "type": "string"
                },
                "timeout": {
                    "type": "string"
                }
            }
        },
        "dto.RedisConfPersistenceUpdate": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "appendfsync": {
                    "type": "string"
                },
                "appendonly": {
                    "type": "string"
                },
                "save": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "aof",
                        "rbd"
                    ]
                }
            }
        },
        "dto.RedisConfUpdate": {
            "type": "object",
            "properties": {
                "maxclients": {
                    "type": "string"
                },
                "maxmemory": {
                    "type": "string"
                },
                "timeout": {
                    "type": "string"
                }
            }
        },
        "dto.RedisConfUpdateByFile": {
            "type": "object",
            "properties": {
                "file": {
                    "type": "string"
                },
                "restartNow": {
                    "type": "boolean"
                }
            }
        },
        "dto.RedisPersistence": {
            "type": "object",
            "properties": {
                "appendfsync": {
                    "type": "string"
                },
                "appendonly": {
                    "type": "string"
                },
                "save": {
                    "type": "string"
                }
            }
        },
        "dto.RedisStatus": {
            "type": "object",
            "properties": {
                "connected_clients": {
                    "type": "string"
                },
                "instantaneous_ops_per_sec": {
                    "type": "string"
                },
                "keyspace_hits": {
                    "type": "string"
                },
                "keyspace_misses": {
                    "type": "string"
                },
                "latest_fork_usec": {
                    "type": "string"
                },
                "mem_fragmentation_ratio": {
                    "type": "string"
                },
                "tcp_port": {
                    "type": "string"
                },
                "total_commands_processed": {
                    "type": "string"
                },
                "total_connections_received": {
                    "type": "string"
                },
                "uptime_in_days": {
                    "type": "string"
                },
                "used_memory": {
                    "type": "string"
                },
                "used_memory_peak": {
                    "type": "string"
                },
                "used_memory_rss": {
                    "type": "string"
                }
            }
        },
        "dto.SearchRecord": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "cronjobID": {
                    "type": "integer"
                },
                "endTime": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "startTime": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.SearchWithPage": {
            "type": "object",
            "required": [
                "info",
                "page",
                "pageSize"
            ],
            "properties": {
                "info": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "dto.UploadRecover": {
            "type": "object",
            "required": [
                "dbName",
                "mysqlName"
            ],
            "properties": {
                "dbName": {
                    "type": "string"
                },
                "fileDir": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "mysqlName": {
                    "type": "string"
                }
            }
        },
        "dto.VolumeCreat": {
            "type": "object",
            "properties": {
                "driver": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.VolumeHelper": {
            "type": "object",
            "properties": {
                "containerDir": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "sourceDir": {
                    "type": "string"
                }
            }
        },
        "request.AppInstalledSearch": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.AppSearch": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "1Panel",
	Description: "开源Linux面板",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
