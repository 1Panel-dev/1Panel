import fit2cloudEnLocale from 'fit2cloud-ui-plus/src/locale/lang/en';
const message = {
    commons: {
        true: 'true',
        false: 'false',
        example: 'e.g.:',
        button: {
            create: 'Create ',
            add: 'Add ',
            save: 'Save ',
            set: 'Setting',
            sync: 'Sync ',
            delete: 'Delete ',
            edit: 'Edit',
            enable: 'Enable',
            disable: 'Disable',
            confirm: 'Confirm',
            cancel: 'Cancel',
            reset: 'Reset',
            conn: 'Connect',
            disconn: 'Disconnect',
            clean: 'Clean',
            login: 'Login',
            close: 'Close',
            stop: 'Stop',
            start: 'Start',
            view: 'View',
            watch: 'Watch',
            handle: 'Handle',
            expand: 'Expand',
            log: 'Log',
            back: 'Back',
            recover: 'Recover',
            retry: 'Retry',
            upload: 'Upload',
            download: 'Download',
            init: 'Init',
            verify: 'Verify',
            saveAndEnable: 'Save and enable',
            import: 'Import',
            search: 'Search',
            refresh: 'Refresh',
        },
        search: {
            timeStart: 'Time start',
            timeEnd: 'Time end',
            timeRange: 'To',
            dateStart: 'Date start',
            dateEnd: 'Date end',
        },
        table: {
            all: 'All',
            total: 'Total {0}',
            name: 'Name',
            type: 'Type',
            status: 'Status',
            statusSuccess: 'Success',
            statusFailed: 'Failed',
            records: 'Records',
            group: 'Group',
            createdAt: 'Creation Time',
            publishedAt: 'Publish Time',
            date: 'Date',
            updatedAt: 'Update Time',
            operate: 'Operations',
            message: 'Message',
            description: 'Description',
            interval: 'Interval',
            title: 'Title',
            tableSetting: 'Table setting',
            autoRefresh: 'Auto refresh',
            refreshRate: 'Rate',
        },
        loadingText: {
            Upgrading: 'System upgrade, please wait...',
            Restarting: 'System restart, please wait...',
            Snapshoting: 'Making snapshots, please wait...',
            Recovering: 'Recovering from snapshot, please wait...',
            Rollbacking: 'Rollbacking from snapshot, please wait...',
        },
        msg: {
            delete: 'This operation delete cannot be rolled back. Do you want to continue?',
            clean: 'This operation clean cannot be rolled back. Do you want to continue?',
            deleteTitle: 'Delete',
            deleteSuccess: 'Delete Success',
            loginSuccess: 'Login Success',
            operationSuccess: 'Successful operation',
            copySuccess: 'Copy Successful',
            notSupportOperation: 'This operation is not supported',
            requestTimeout: 'The request timed out, please try again later',
            infoTitle: 'Hint',
            notRecords: 'No execution record is generated for the current task',
            sureLogOut: 'Are you sure you want to log out?',
            createSuccess: 'Create Success',
            updateSuccess: 'Update Success',
            uploadSuccess: 'Update Success',
            operate: 'Operate',
            inputOrSelect: 'Please select or enter',
            backupSuccess: 'Backup Success',
            unSupportType: 'Current file type is not supported!',
            unSupportSize: 'The uploaded file exceeds {0}M, please confirm!',
            fileExist: 'The file already exists in the current folder. Repeat uploading is not supported!',
            fileNameErr:
                'You can upload only files whose name contains 1 to 256 characters, including English, Chinese, digits, or periods (.-_)',
            comfimNoNull: 'Make sure the value {0} is not empty',
        },
        login: {
            firstLogin: 'First login, please create an initial administrator user!',
            username: 'UserName',
            password: 'Password',
            rePassword: 'Confirm Password',
            welcome: 'Welcome back, please enter your username and password to log in!',
            errorAuthInfo: 'The user name or password you entered is incorrect, please re-enter!',
            errorMfaInfo: 'Incorrect authentication information, please try again!',
            captchaHelper: 'Captcha',
            errorCaptcha: 'Captcha code error!',
            notSafe: 'Access Denied',
            safeEntrance1: 'The secure login has been enabled in the current environment',
            safeEntrance2: 'Enter the following command on the SSH terminal to view the panel entry: 1pctl user-info',
            codeInput: 'Please enter the 6-digit verification code of the MFA validator',
            mfaTitle: 'MFA Certification',
            mfaCode: 'MFA verification code',
            title: 'Linux Server Management Panel',
            licenseHelper:
                'Agree &laquo; <a href="https://www.fit2cloud.com/legal/licenses.html" target="_blank">Community License Agreement</a> &raquo;',
            errorAgree: 'Please click to agree to the Community Software License Agreement',
        },
        rule: {
            username: 'Please enter a username',
            password: 'Please enter a password',
            rePassword: 'The passwords are inconsistent. Please check and re-enter the password',
            requiredInput: 'Please enter the required fields',
            requiredSelect: 'Please select the required fields',
            commonName: 'Support English, Chinese, numbers, .-, and _ length 1-30',
            userName: 'Support English, Chinese, numbers and _ length 3-30',
            simpleName: 'Support English, numbers and _ length 1-30',
            dbName: 'Support English, Chinese, numbers, .-, and _ length 1-16',
            imageName: 'Support English, numbers, :/.-_, length 1-150',
            volumeName: 'Support English, numbers, .-_, length 2-30',
            complexityPassword:
                'Longer than eight characters and contains at least two combinations of letters, digits, and special characters',
            commonPassword: 'Please enter a password with more than 6 characters',
            email: 'Email format error',
            number: 'Please enter the correct number',
            integer: 'Please enter the correct positive integer',
            ip: 'Please enter the correct IP address',
            host: 'Enter the correct IP address or domain name',
            port: 'Please enter the correct port',
            selectHelper: 'Please select the correct {0} file',
            domain: 'domain name format error',
            databaseName: 'Support English, numbers, _, length 1-30',
            ipErr: 'IP [{0}] format error, please check',
            numberRange: 'Number range: {0} - {1}',
            paramName: 'Support English, numbers, .- and _, length 2-30',
            paramComplexity:
                'Support English, numbers, {0}, length 6-30,Special characters cannot be at the beginning and end',
            paramUrlAndPort: 'The format is http(s)://(domain name/ip):(port)',
            nginxDoc: 'Only supports English case, numbers, and .',
            appName: 'Support English, numbers, - and _, length 2-30, and cannot start and end with -_',
        },
        res: {
            paramError: 'The request failed, please try again later!',
            forbidden: 'The current user has no permission',
            serverError: 'Service exception',
            notFound: 'The resource does not exist',
            commonError: 'The request failed',
        },
        header: {
            language: 'Internationalization',
            zh: '简体中文',
            en: 'English',
            theme: 'Layout Settings',
            globalTheme: 'Global',
            themeColor: 'Theme Color',
            darkTheme: 'Dark Theme',
            personalData: 'Personal Data',
            changePassword: 'Change Password',
            logout: 'Logout',
        },
        service: {
            serviceNotStarted: 'The {0} service is not currently started',
        },
        status: {
            running: 'Running',
            stopped: 'Stopped',
            waiting: 'Waiting',
            success: 'Success',
            failed: 'Failed',
            error: 'Error',
            created: 'Created',
            restarting: 'Restarting',
            uploading: 'Uploading',
            removing: 'Removing',
            paused: 'Paused',
            exited: 'Exited',
            enabled: 'Enabled',
            disabled: 'Disabled',
            normal: 'Normal',
            building: 'Building',
        },
    },
    menu: {
        home: 'Overview',
        apps: 'App Store',
        website: 'Website',
        project: 'Project',
        config: 'Config',
        firewall: 'Firewall',
        database: 'Database',
        container: 'Container',
        cronjob: 'Cronjob',
        host: 'Host',
        security: 'Security',
        files: 'File',
        monitor: 'Monitor',
        terminal: 'Terminal',
        settings: 'Setting',
        toolbox: 'Toolbox',
        logs: 'Log',
        ssl: 'Certificate',
        runtime: 'Runtime',
    },
    home: {
        overview: 'Overview',
        entranceHelper:
            'Enabling a secure entrance can help improve system security. If necessary, go to the Control Panel settings, select Security, and enable the secure entrance.',
        appInstalled: 'App installed',
        systemInfo: 'System info',
        hostname: 'Hostname',
        platformVersion: 'Platform version',
        kernelVersion: 'Kernel version',
        kernelArch: 'Kernel arch',
        network: 'Network',
        io: 'Disk IO',
        baseInfo: 'Base info',
        totalSend: 'Total send',
        totalRecv: 'Total recv',
        rwPerSecond: 'IO times',
        ioDelay: 'IO delay',
        time: 'Times',
        uptime: 'Up Time',
        runningTime: 'Running Time',
        Day: 'Days',
        Hour: 'Hours',
        Minute: 'Minutes',
        Second: 'Seconds',

        runSmoothly: 'Run smoothly',
        runNormal: 'Run normal',
        runSlowly: 'Run slowly',
        runJam: 'Run Blockaged',

        core: 'Physical core',
        logicCore: 'Logic core',
        loadAverage: 'Average load in the last {0} minutes',
        load: 'Load',
        mount: 'Mount point',
        fileSystem: 'File system',
        total: 'Total',
        used: 'Used',
        free: 'Free',
        percent: 'Percent',
        app: 'Recommended Apps',
        haloInfo: 'Easy to use and powerful open source website tools',
        deInfo: 'Open source data visualization tool available to everyone',
        jsInfo: 'The popular Open source fortress machine',
        msInfo: 'One-stop open source continuous testing platform',
        koInfo: 'Open source lightweight Kubernetes distribution',
        kubepiInfo: 'Modern open source Kubernetes panel',
        goInstall: 'Go install',

        networkCard: 'NetworkCard',
        disk: 'Disk',
    },
    tabs: {
        more: 'More',
        closeCurrent: 'Close current',
        closeOther: 'Close other',
        closeAll: 'Close All',
    },
    header: {
        logout: 'Logout',
    },
    database: {
        database: 'database',
        delete: 'Delete operation cannot be rolled back, please input "',
        deleteHelper: '" to delete this database',
        create: 'Create database',
        noMysql: 'No {0} database is detected, please go to App Store and click Install!',
        goInstall: 'Go to install',
        source: 'Source',
        backup: 'Backup',
        permission: 'Permission',
        permissionForIP: 'IP',
        permissionAll: 'All of them(%)',
        databaseConnInfo: 'Conn info',
        rootPassword: 'Root password',
        serviceName: 'Service Name',
        serviceNameHelper: 'Access between containers in the same network.',
        backupList: 'Backup',
        backList: 'Return',
        loadBackup: 'Import',
        setting: 'Settings',
        remoteAccess: 'Remote access',
        remoteHelper: 'One in a row, for example:\n172.16.10.111\n172.16.10.112',
        remoteConnHelper:
            'Remote connection to mysql as user root may have security risks. Therefore, perform this operation with caution.',
        changePassword: 'Password',
        changePasswordHelper:
            'The database has been associated with an application. Changing the password will change the database password of the application at the same time. The change takes effect after the application restarts.',

        confChange: 'Configuration change',

        portSetting: 'Port setting',
        portHelper:
            'This port is the exposed port of the container. You need to save the modification separately and restart the container!',

        selectFile: 'Select file',
        supportUpType: 'Only sql, sql.gz, and tar.gz files are supported',
        zipFormat: 'tar.gz compressed package structure: test.tar.gz compressed package must contain test.sql',

        currentStatus: 'Current state',
        runTime: 'Startup time',
        connections: 'Total connections',
        bytesSent: 'Send bytes',
        bytesReceived: 'Received bytes',
        queryPerSecond: 'Query per second',
        txPerSecond: 'Tx per second',
        connInfo: 'active/peak connections',
        connInfoHelper: 'If the value is too large, increase max_connections',
        threadCacheHit: 'Thread cache hit',
        threadCacheHitHelper: 'If it is too low, increase thread_cache_size',
        indexHit: 'Index hit',
        indexHitHelper: 'If it is too low, increase key_buffer_size',
        innodbIndexHit: 'Innodb 索引命中率',
        innodbIndexHitHelper: 'If it is too low, increase innodb_buffer_pool_size',
        cacheHit: 'Querying the Cache Hit',
        cacheHitHelper: 'If it is too low, increase query_cache_size',
        tmpTableToDB: 'Temporary table to disk',
        tmpTableToDBHelper: 'If it is too large, try increasing tmp_table_size',
        openTables: 'Open tables',
        openTablesHelper: 'The configuration value of table_open_cache must be greater than or equal to this value',
        selectFullJoin: 'Select full join',
        selectFullJoinHelper: 'If the value is not 0, check whether the index of the data table is correct',
        selectRangeCheck: 'The number of joins with no index',
        selectRangeCheckHelper: 'If the value is not 0, check whether the index of the data table is correct',
        sortMergePasses: 'Number of sorted merges',
        sortMergePassesHelper: 'If the value is too large, increase sort_buffer_size',
        tableLocksWaited: 'Lock table number',
        tableLocksWaitedHelper: 'If the value is too large, consider increasing your database performance',

        performanceTuning: 'Performance tuning',
        optimizationScheme: 'Optimization scheme',
        keyBufferSizeHelper: 'Buffer size for index',
        queryCacheSizeHelper: 'Query cache. If this function is disabled, set this parameter to 0',
        tmpTableSizeHelper: 'Temporary table cache size',
        innodbBufferPoolSizeHelper: 'Innodb buffer size',
        innodbLogBufferSizeHelper: 'Innodb log buffer size',
        sortBufferSizeHelper: '* connections, buffer size per thread sort',
        readBufferSizeHelper: '* connections, read buffer size',
        readRndBufferSizeHelper: '* connections, random read buffer size',
        joinBufferSizeHelper: '* connections, association table cache size',
        threadStackelper: '* connections, stack size per thread',
        binlogCacheSizeHelper: '* onnections, binary log cache size (multiples of 4096)',
        threadCacheSizeHelper: 'Thread pool size',
        tableOpenCacheHelper: 'Table cache',
        maxConnectionsHelper: 'Max connections',
        restart: 'Restart',

        log: 'Logs',
        slowLog: 'Slowlogs',
        noData: 'No slow log yet...',

        isOn: 'On',
        longQueryTime: 'threshold(s)',
        thresholdRangeHelper: 'Please enter the correct threshold (1 - 600).',

        status: 'The current state',
        baseParam: 'Basic parameter',
        performanceParam: 'Performance parameter',
        terminal: 'Terminal mode',
        second: 'Second',
        timeout: 'Timeout',
        timeoutHelper: 'Idle connection timeout period. 0 indicates that the connection is on continuously',
        maxclients: 'Max clients',
        requirepass: 'Password',
        requirepassHelper:
            'Leave this blank to indicate that no password has been set. Changes need to be saved separately and the container restarted!',
        databases: 'Number of databases',
        maxmemory: 'Maximum memory usage',
        maxmemoryHelper: '0 indicates no restriction',
        tcpPort: 'Current listening port',
        uptimeInDays: 'Days in operation',
        connectedClients: 'Number of connected clients',
        usedMemory: 'Redis indicates the peak value of memory allocated historically',
        usedMemoryRss: 'Total system memory used by Redis',
        memFragmentationRatio: 'Memory fragmentation ratio',
        totalConnectionsReceived: 'Total number of clients connected since run',
        totalCommandsProcessed: 'The total number of commands executed since the run',
        instantaneousOpsPerSec: 'Number of commands executed by the server per second',
        keyspaceHits: 'The number of times a database key was successfully found',
        keyspaceMisses: 'Number of failed attempts to find the database key',
        hit: 'Find the database key hit ratio',
        latestForkUsec: 'The number of microseconds spent on the last fork() operation',

        recoverHelper: 'Data is about to be overwritten with [{0}]. Do you want to continue?',
        submitIt: 'Overwrite the data',

        baseConf: 'Basic configuration',
        allConf: 'All configuration',
        restartNow: 'Restart now',
        restartNowHelper1:
            'You need to restart the system after the configuration changes take effect. If your data needs to be persisted, perform the save operation first.',
        restartNowHelper: 'The modification takes effect only after the system restarts.',

        persistence: 'Persistence',
        rdbHelper1: 'In seconds, insert',
        rdbHelper2: 'The data',
        rdbHelper3: 'Meeting either condition triggers RDB persistence',
        rdbInfo: 'Ensure that the value in the rule list ranges from 1 to 100000',

        containerConn: 'Container connection address',
        containerConnHelper: 'PHP runtime environment/container-installed applications use this connection address',
        remoteConn: 'External connection address',
        remoteConnHelper2: 'Use this address for non-container or external connections',
        localIP: 'Local IP',
    },
    container: {
        createContainer: 'Create container',
        containerList: 'Container list',
        operatorHelper: '{0} will be performed on the selected container. Do you want to continue?',
        operatorAppHelper:
            'There is a container from the App store. The {0} operation may affect the normal use of this service. Are you sure?',
        start: 'Start',
        stop: 'Stop',
        restart: 'Restart',
        kill: 'Kill',
        pause: 'Pause',
        unpause: 'Unpause',
        rename: 'Rename',
        remove: 'Remove',
        container: 'Container',
        upTime: 'UpTime',
        all: 'All',
        lastDay: 'Last Day',
        last4Hour: 'Last 4 Hours',
        lastHour: 'Last Hour',
        last10Min: 'Last 10 Minutes',
        newName: 'New name',
        source: 'Resource rate',

        user: 'User',
        command: 'Command',
        custom: 'Custom',
        emptyUser: 'When empty, you will log in as  default',
        containerTerminal: 'Terminal',

        port: 'Port',
        server: 'Host',
        serverExample: 'e.g. 80, 80-88, ip:80 or ip:80-88',
        contianerExample: 'e.g. 80 or 80-88',
        exposePort: 'Expose port',
        exposeAll: 'Expose all',
        cmd: 'Command',
        cmdHelper: 'Example: echo "hello"',
        autoRemove: 'Auto remove',
        cpuQuota: 'NacosCPU',
        memoryLimit: 'Memory',
        limitHelper: 'If the limit is 0, the limit is turned off',
        mount: 'Mount',
        serverPath: 'Server path',
        containerDir: 'Container path',
        volumeHelper: 'Ensure that the content of the storage volume is correct',
        modeRW: 'RW',
        modeR: 'R',
        mode: 'Mode',
        env: 'Environment',
        restartPolicy: 'Restart policy',
        unlessStopped: 'unless-stopped',
        onFailure: 'on-failure（five times by default）',
        no: 'no',

        image: 'Image',
        imagePull: 'Image pull',
        imagePush: 'Image push',
        imageDelete: 'Image delete',
        imageDeleteTag: 'Image tag delete',
        repoName: 'Repo Name',
        imageName: 'Image name',
        pull: 'Pull',
        path: 'Path',
        importImage: 'Image import',
        import: 'Import',
        build: 'Build',
        imageBuild: 'Image build',
        pathSelect: 'Path',
        label: 'Label',
        push: 'Push',
        fileName: 'FileName',
        export: 'Export',
        exportImage: 'Image export',
        version: 'Version',
        size: 'Size',
        from: 'From',
        tag: 'Tag',
        tagHelper: 'one in a row, for example, \nkey1=value1\nkey2=value2',
        imageNameHelper: 'Image name and Tag, for example: nginx:latest',

        network: 'Network',
        createNetwork: 'Create network',
        networkName: 'Name',
        driver: 'Driver',
        option: 'Option',
        attachable: 'Attachable',
        subnet: 'Subnet',
        scope: 'IP Scope',
        gateway: 'Gateway',

        monitor: 'Monitor',
        refreshTime: 'Refresh time',
        cache: 'Cache',

        volume: 'Volume',
        volumeName: 'Name',
        nfsEnable: 'Enable NFS storage',
        nfsAddress: 'Address',
        nfsAddressHelper: 'Support input of IP address or domain',
        mountpoint: 'Mountpoint',
        mountpointNFSHerlper: 'e.g. /nfs, /nfs-share',
        options: 'Options',
        createVolume: 'Create volume',

        repo: 'Repo',
        createRepo: 'Add repo',
        name: 'Name',
        protocol: 'Protocol',
        httpRepo: 'The http repository needs to restart the docker service to add credit',
        delInsecure: 'Deletion of credit',
        delInsecureHelper: 'docker service needs to be restarted to delete the credit. Do you want to delete it?',
        downloadUrl: 'Download URL',
        imageRepo: 'Image repo',
        repoHelper: 'Does it include a mirror repository/organization/project?',
        auth: 'Auth',
        mirrorHelper: 'One in a row, for example:\nhttps://hub-mirror.c.163.com \nhttps://reg-mirror.qiniu.com',
        registrieHelper: 'One in a row, for example:\n172.16.10.111:8081 \n172.16.10.112:8081',

        compose: 'Compose',
        fromChangeHelper: 'Switching the source will clear the current edited content. Do you want to continue?',
        composePathHelper: 'Config file save path: {0}',
        composeHelper:
            'The composition created through 1Panel editor or template will be saved in the {0}/docker/compose directory.',
        deleteFile: 'Delete file',
        deleteComposeHelper: 'Delete the corresponding composition file.',
        deleteCompose: '" Delete this composition.',
        apps: 'Apps',
        local: 'Local',
        createCompose: 'Create compose',
        template: 'Template',
        composeTemplate: 'Compose template',
        createComposeTemplate: 'Create compose template',
        description: 'Description',
        content: 'Content',
        containerNumber: 'Container number',
        down: 'Down',
        up: 'Up',
        composeDetailHelper:
            'The compose is created external to 1Panel. The start and stop operations are not supported.',
        composeOperatorHelper: '{1} operation will be performed on {0}. Do you want to continue?',

        setting: 'Setting',
        stopHelper: 'docker service includes docker.service and docker.socket: ',
        stopHelper2:
            'When docker.service is stopped, Docker.socket will keep listening state. When docker command request is listened, The docker.service will be pulled up again.',
        stopHelper3: 'Stopping docker.socket will make the docker.service service unavailable',
        dockerStatus: 'Docker Service',
        daemonJsonPathHelper: 'Ensure that the configuration path is the same as that specified in docker.service.',
        mirrors: 'Registry mirrors',
        mirrorsHelper:
            'Redirecting requests for a Docker image repository to a specified image accelerator can improve the download speed of the image',
        registries: 'Insecure registries',
        liveHelper:
            'Allows the running container state to be preserved in case of unexpected shutdown or crash of the Docker daemon',
        liveWithSwarmHelper: 'live-restore daemon configuration is incompatible with swarm mode.',
        daemonJsonPath: 'Conf Path',
        serviceUnavailable: 'Docker service is not started at present, please click',
        startIn: ' to start',
    },
    cronjob: {
        cronTask: 'Task',
        changeStatus: 'Change status',
        disableMsg: 'The cronjob cannot continue to run after it is stopped. Do you want to stop it?',
        enableMsg: 'The cronjob has been stopped. Enable now?',
        taskType: 'Task type',
        record: 'Records',
        shell: 'Shell script',
        website: 'Backup website',
        rulesHelper: 'Compression exclusion rules (with; Is a delimiter), for example: \n*.log; *.sql',
        lastRecrodTime: 'Last execution time',
        all: 'All',
        failedRecord: 'Failed records',
        successRecord: 'Successful records',
        database: 'Backup database',
        missBackupAccount: 'The backup account could not be found',
        syncDate: 'Synchronization time ',
        releaseMemory: 'Free memory',
        curl: 'Access URL',
        taskName: 'Task name',
        cronSpec: 'Lifecycle',
        cronSpecHelper: 'Enter the correct execution period',
        cleanHelper:
            'This operation records all job execution records, backup files, and log files. Do you want to continue?',
        directory: 'Backup directory',
        sourceDir: 'Backup directory',
        allOptionHelper:
            'The current task plan is to back up all [{0}]. Direct download is not supported at the moment. You can check the backup list of [{0}] menu.',
        exclusionRules: 'Exclusive rule',
        saveLocal: 'Retain local backups (the same as the number of cloud storage copies)',
        url: 'URL Address',
        target: 'Target',
        retainCopies: 'Retain copies',
        retainCopiesHelper: 'Number of copies of execution records, log files, and backup files',
        cronSpecRule: 'Please enter a correct lifecycle',
        perMonth: 'Every monthly',
        perWeek: 'Every week',
        perHour: 'Every hour',
        perNDay: 'Every N days',
        perDay: 'Every days',
        perNHour: 'Every N hours',
        perNMinute: 'Every N minutes',
        per: 'Every ',
        handle: 'Handle',
        day: 'Day',
        day1: 'Day',
        hour: ' Hour',
        minute: ' Minute',
        monday: 'Monday',
        tuesday: 'Tuesday',
        wednesday: 'Wednesday',
        thursday: 'Thursday',
        friday: 'Friday',
        saturday: 'Saturday',
        sunday: 'Sunday',
        shellContent: 'Script content',
        errRecord: 'Incorrect logging',
        errHandle: 'Task execution failure',
        noRecord: 'The execution did not generate any logs',
        cleanData: 'Clean data',
        cleanDataHelper: 'Delete the backup file generated during this task.',
        noLogs: 'No task output yet...',
        errPath: 'Backup path [{0}] error, cannot download!',
    },
    monitor: {
        avgLoad: 'Average load',
        loadDetail: 'Load detail',
        resourceUsage: 'Resource utilization rate',
        networkCard: 'Net card',
        min: 'Minutes',
        read: 'Read',
        write: 'Write',
        count: 'Times',
        readWriteCount: 'Read or write Times',
        readWriteTime: 'Read or write delay',
        today: 'Today',
        yestoday: 'Yestoday',
        lastNDay: 'Last {0} day',
        memory: 'Memory',
        cache: 'Cache',
        disk: 'Disk',
        network: 'Network',
        up: 'Up',
        down: 'Down',
    },
    terminal: {
        conn: 'connection',
        connLocalErr: 'Unable to automatically authenticate, please fill in the local server login information!',
        testConn: 'Test connection',
        saveAndConn: 'Save and Connect',
        connTestOk: 'Connection information available',
        connTestFailed: 'Connection unavailable, please check connection information!',
        host: 'Host',
        createConn: 'New connection',
        group: 'Group',
        noHost: 'No host',
        groupChange: 'Change group',
        expand: 'Expand all',
        fold: 'All contract',
        batchInput: 'Batch input',
        quickCommand: 'Quick command',
        groupDeleteHelper:
            'After the group is removed, all connections in the group will be migrated to the default group. Confirm the information',
        command: 'Command',
        quickCmd: 'Quick command',
        addHost: 'Add Host',
        localhost: 'Localhost',
        ip: 'Address',
        name: 'Name',
        port: 'Port',
        user: 'Username',
        authMode: 'Auth Mode',
        passwordMode: 'Password',
        rememberPassword: 'Remember password',
        keyMode: 'PrivateKey',
        password: 'Password',
        key: 'Private key',
        keyPassword: 'Private key password',
        emptyTerminal: 'No terminal is currently connected',
    },
    logs: {
        operation: 'Operation logs',
        login: 'Login logs',
        system: 'System logs',
        loginIP: 'Login IP',
        loginAddress: 'Login address',
        loginAgent: 'Login agent',
        loginStatus: 'Login status',
        deleteLogs: 'Clearing Logs',
        resource: 'Resource',
        operate: 'Operate',
        detail: {
            users: 'User',
            hosts: 'Host',
            apps: 'App',
            websites: 'Website',
            containers: 'Container',
            runtimes: 'Runtime',
            commands: 'Command',
            groups: 'System Group',
            files: 'File Manage',
            backups: 'Backup Account',
            logs: 'Panel Logs',
            settings: 'Panel Setting',
            cronjobs: 'Cronjob',
            databases: 'Database',
            auth: 'User',
            login: ' login',
            logout: ' logout',
        },
        status: 'status',
    },
    file: {
        dir: 'Folder',
        upload: 'Upload',
        download: 'Download',
        fileName: 'Dile name',
        search: 'Find',
        mode: 'Permission',
        owner: 'Owner',
        file: 'File',
        remoteFile: 'Remote download',
        share: 'Share',
        sync: 'Data Synchronization',
        size: 'Size',
        updateTime: 'Modification Time',
        open: 'Open',
        rename: 'Rename',
        role: 'Permission',
        info: 'Attribute',
        linkFile: 'Soft link',
        terminal: 'Terminal',
        shareList: 'Share list',
        zip: 'Compressed',
        user: 'User',
        group: 'User group',
        path: 'Path',
        public: 'Public',
        setRole: 'Set permissions',
        link: 'Whether to link',
        rRole: 'Read',
        wRole: 'Write',
        xRole: 'Executable',
        name: 'Name',
        compress: 'Compress',
        deCompress: 'Decompress',
        compressType: 'Compress format',
        compressDst: 'Compress path',
        replace: 'Overwrite existing files',
        compressSuccess: 'Compressed successfully',
        deCompressSuccess: 'Decompress succeeded',
        deCompressDst: 'Decompress path',
        linkType: 'Link Type',
        softLink: 'Soft link',
        hardLink: 'Hard link',
        linkPath: 'Link Path',
        selectFile: 'Select file',
        downloadSuccess: 'Download succeeded',
        downloadUrl: 'Download URL',
        downloadStart: 'Download start!',
        moveSuccess: 'Move success',
        copySuccess: 'Copy success',
        move: 'Move',
        copy: 'Copy',
        calculate: 'Calculate',
        canNotDeCompress: 'Cannot decompress this file',
        uploadSuccess: 'Upload successful!',
        downloadProcess: 'Download progress',
        downloading: 'Downloading...',
        infoDetail: 'File Properties',
        type: 'Type',
        list: 'File List',
        sub: 'Include subdirectory',
        downlodSuccess: 'Download Success',
        theme: 'Theme',
        language: 'Language',
        eol: 'End Of Line',
        copyDir: 'Copy Dir',
        paste: 'Paste',
        cancel: 'Cancel',
        changeOwner: 'Modify user and user group',
        containSub: 'Modify sub-file attributes at the same time',
        ownerHelper:
            'The default user of the PHP operating environment: the user group is 1000:1000, it is normal that the users inside and outside the container show inconsistencies',
    },
    setting: {
        all: 'All',
        panel: 'Panel',
        user: 'UserName',
        userChange: 'Change username',
        userChangeHelper: 'Change the user name to log out. Do you want to continue?',
        passwd: 'Password',
        emailHelper: 'For password retrieval',
        title: 'Panel alias',
        panelPort: 'Panel port',
        portHelper:
            'The recommended port range is 8888 to 65535. Note: If the server has a security group, permit the new port from the security group in advance',
        portChange: 'Port change',
        portChangeHelper: 'Modify the service port and restart the service. Do you want to continue?',
        theme: 'Theme',
        dark: 'Dark',
        light: 'Light',
        language: 'Language',
        languageHelper:
            'By default, it follows the browser language. This parameter takes effect only on the current browser',
        sessionTimeout: 'Timeout',
        sessionTimeoutError: 'The minimum timeout is 300 seconds',
        sessionTimeoutHelper:
            'If you do not operate the panel for more than {0} seconds, the panel automatically logs out',
        syncTime: 'Server time',
        second: ' S',
        changePassword: 'Password change',
        oldPassword: 'Original password',
        newPassword: 'New password',
        retryPassword: 'Confirm password',
        duplicatePassword: 'The new password cannot be the same as the original password, please re-enter!',

        backup: 'Backup',
        thirdParty: 'Third-party account',
        createBackupAccount: 'Add {0}',
        noTypeForCreate: 'No backup type is currently created',
        LOCAL: 'Server disks',
        currentPath: 'Current path',
        OSS: 'Ali OSS',
        S3: 'Amazon S3',
        MINIO: 'MINIO',
        SFTP: 'SFTP',
        COS: 'Tencent COS',
        KODO: 'Qiniu Kodo',
        domainHelper: 'The accelerated domain name must contain http:// or https://',
        backupAlert:
            "In theory, as long as the cloud provider is compatible with the S3 protocol, existing Amazon S3 cloud storage can be used for backup. For specific configurations, please refer to the <a target=“_blank” href='https://1panel.cn/docs/user_manual/settings/#3'>official documentation.</a> ",
        domain: 'Accelerate domain',
        backupAccount: 'Backup account',
        loadBucket: 'Get bucket',
        accountName: 'Account name',
        accountKey: 'Account key',
        address: 'Address',
        port: 'Port',
        username: 'Username',
        password: 'Password',
        path: 'Path',

        safe: 'Security',
        entrance: 'Entrance',
        entranceHelper: 'Enabling secure entry will only allow logging in to the panel through specified secure entry.',
        entranceError:
            'Please enter a secure login entry point of 6-10 characters, only numbers or letters are supported.',
        entranceInputHelper: 'When the security entry is set to blank, the security entry is cancelled.',
        expirationTime: 'Expiration Time',
        unSetting: 'Not Set',
        noneSetting:
            'Set the expiration time for the panel password. After the expiration, you need to reset the password',
        expirationHelper: 'If the password expiration time is [0] days, the password expiration function is disabled',
        days: 'Expiration Days',
        expiredHelper: 'The current password has expired. Please change the password again.',
        timeoutHelper:
            '[ {0} days ] The panel password is about to expire. After the expiration, you need to reset the password',
        complexity: 'Complexity verification',
        complexityHelper:
            'The password must contain at least eight characters and contain at least three uppercase letters, lowercase letters, digits, and special characters',
        mfa: 'MFA',
        mfaHelper: 'After this function is enabled, the mobile application verification code will be verified',
        mfaHelper1: 'Download a MFA verification mobile app e.g.:',
        mfaHelper2: 'Scan the following QR code using the mobile app to obtain the 6-digit verification code',
        mfaHelper3: 'Enter six digits from the app',
        mfaSecret: 'Secret',
        mfaTypeOption: 'Select the method of obtaining the secret',
        qrCode: 'QR code',
        manualInput: 'Manual input',
        mfaCode: 'Code',
        sslDisable: 'Disable',
        sslDisableHelper:
            'If the https service is disabled, you need to restart the panel for it to take effect. Do you want to continue?',

        https: 'Setting up HTTPS protocol access for the panel can enhance the security of panel access.',
        certType: 'Certificate type',
        selfSigned: 'Self signed',
        selfSignedHelper:
            'It is normal for self-signed certificates to be not trusted by browsers and display a security warning as the certificate is not issued by a trusted third party.',
        import: 'Import',
        select: 'Select',
        domainOrIP: 'Domain or IP：',
        timeOut: 'Timeout',
        rootCrtDownload: 'Root certificate download',
        primaryKey: 'Primary key',
        certificate: 'Certificate',

        snapshot: 'Snapshot',
        thirdPartySupport: 'Only third-party accounts are supported',
        recoverDetail: 'Recover detail',
        createSnapshot: 'Create snapshot',
        importSnapshot: 'Sync snapshot',
        recover: 'Recover',
        noRecoverRecord: 'No recovery record has been recorded',
        lastRecoverAt: 'Last recovery time',
        lastRollbackAt: 'Last rollback time',
        noRollbackRecord: 'No rollback record has been recorded',
        reDownload: 'Download the backup file again',
        recoverRecord: 'Recover record',
        recoverHelper:
            'The recovery is about to start from snapshot {0}, and the recovery needs to restart docker and 1panel service, do you want to continue?',
        rollback: 'Rollback',
        rollbackHelper:
            'This recovery is about to be rolled back, which will replace all the files recovered this time. In the process, docker and 1panel services may need to be restarted. Do you want to continue?',

        upgrade: 'Upgrade',
        upgrading: 'Please wait while the upgrade is underway...',
        upgradeHelper: 'The upgrade requires a service restart. Do you want to continue?',
        noUpgrade: 'It is currently the latest version',
        versionHelper:
            'Name rules: [major version].[functional version].[Bug fix version], as shown in the following example:',
        versionHelper1: 'v1.0.1 is a Bug fix after v1.0.0',
        versionHelper2: 'v1.1.0 is a feature release after v1.0.0',
        newVersion: '(Bug fix version)',
        latestVersion: '(Functional version)',
        upgradeCheck: 'Check for updates',
        upgradeNotes: 'Release note',
        upgradeNow: 'Upgrade now',
        source: 'Download source',
        hasNewVersion: 'New version Available',

        monitor: 'Monitor',
        enableMonitor: 'Enable',
        storeDays: 'Expiration days',
        cleanMonitor: 'Clearing monitoring records',

        message: 'Message',
        messageType: 'Message type',
        email: 'Email',
        wechat: 'WeChat',
        dingding: 'DingDing',
        closeMessage: 'Turning off Message Notification',
        emailServer: 'Service name',
        emailAddr: 'Service address',
        emailSMTP: 'SMTP code',
        secret: 'Secret',

        about: 'About',
        project: 'Project Address',
        issue: 'Feedback',
        doc: 'Official document',
        star: 'Star',
        description: '1Panel, Modern, open source Linux server operation and maintenance management panel.',
        forum: 'Forum',
        doc2: 'Document',
        currentVersion: 'Version',
    },
    app: {
        app: 'Application',
        installName: 'Name',
        installed: 'Installed',
        all: 'All',
        version: 'Version',
        detail: 'Details',
        params: 'Param',
        install: 'Install',
        author: 'Author',
        source: 'Source',
        sync: 'Sync',
        appName: 'Application Name',
        status: 'Status',
        container: 'Container',
        restart: 'Restart',
        start: 'Start',
        stop: 'Stop',
        rebuild: 'Rebuild',
        name: 'Name',
        description: 'Description',
        delete: 'Delete',
        deleteWarn:
            'The delete operation will delete all data and backups together. This operation cannot be rolled back. Do you want to continue? ',
        syncSuccess: 'Sync successfully',
        canUpgrade: 'Upgrade',
        backup: 'Backup',
        backupName: 'File Name',
        backupPath: 'File Path',
        backupdate: 'Backup time',
        restore: 'Restore',
        restoreWarn:
            'The restore operation will restart the application and replace the data. This operation cannot be rolled back. Do you want to continue?',
        update: 'update',
        upgrade: 'upgrade',
        versioneSelect: 'Please select a version',
        operatorHelper: 'Operation {0} will be performed on the selected application, Do you want to continue? ',
        checkInstalledWarn: '{0} is not detected, please enter the app store and click to install!',
        gotoInstalled: 'Go to install',
        search: 'Search',
        limitHelper: 'The application has already been installed, does not support repeated installation',
        deleteHelper: '{0} has been associated with the following resources and cannot be deleted',
        checkTitle: 'Prompt',
        website: 'website',
        database: 'database',
        defaultConfig: 'Default Configuration',
        defaultConfigHelper: 'It has been restored to the default configuration, it will take effect after saving',
        forceDelete: 'Force delete',
        forceDeleteHelper:
            'Forced deletion will ignore errors generated during the deletion process and eventually delete metadata',
        deleteBackup: 'Delete backup',
        deleteBackupHelper: 'Also delete the application backup',
        deleteDB: 'Delete Database',
        deleteDBHelper: 'Also delete the database',
        noService: 'No {0}',
        toInstall: 'to install',
        param: 'parameter configuration',
        port: ' Port',
        areadyRun: 'Age',
        day: ' Day ',
        hour: ' Hour',
        syncAppList: 'Sync',
        updatePrompt: 'The current application is the latest version',
        installPrompt: 'No apps installed yet',
        updateHelper: 'Updating parameters may cause the application to fail to start, please operate with caution',
        updateWarn: 'Update parameters need to rebuild the application, Do you want to continue? ',
        busPort: 'Service Port',
    },
    website: {
        website: 'Website',
        primaryDomain: 'Primary Domain',
        otherDomains: 'Other Domains',
        type: 'Type',
        static: 'Static',
        deployment: 'Deployment',
        supportUpType: 'Only .tar.gz files are supported',
        zipFormat: '.tar.gz compressed package structure: test.tar.gz compressed package must contain {0} file',
        proxy: 'Reverse Proxy',
        alias: 'Path Name',
        remark: 'Remark',
        group: 'Group',
        groupSetting: 'Group Management',
        createGroup: 'Create Group',
        app: 'Application',
        appNew: 'New Application',
        appInstalled: 'Installed Application',
        create: 'Create Website',
        delete: 'Delete Website',
        deleteApp: 'Delete Application',
        deleteBackup: 'Delete Backup',
        domain: 'Domain',
        domainHelper: 'One domain per line, support * and IP address, support domain name: port',
        port: 'Port',
        addDomain: 'Add Domain',
        domainConfig: 'Domain Settings',
        defaultDoc: 'Default Document',
        perserver: 'Concurrency',
        perserverHelper: 'Limit the maximum concurrency of the current site',
        perip: 'Single IP',
        peripHelper: 'Limit the maximum number of concurrent access to a single IP',
        rate: 'Flow Limit',
        rateHelper: 'Limit the flow of each request (unit: KB)',
        limtHelper: 'Enable flow control',
        other: 'Other',
        currentSSL: 'Current Certificate',
        dnsAccount: 'DNS Account',
        applySSL: 'Certificate Application',
        SSLList: 'Certificate List',
        createDnsAccount: 'DNS Account',
        aliyun: 'Aliyun DNS',
        manual: 'Manual parsing',
        key: 'Key',
        check: 'View',
        acmeAccountManage: 'Acme Account',
        email: 'Email',
        addAccount: 'Add new account',
        acmeAccount: 'Acme Account',
        provider: 'Verification method',
        dnsManual: 'Manual resolution',
        expireDate: 'Expiration Time',
        brand: 'Issuer',
        deploySSL: 'Deployment',
        deploySSLHelper: 'Are you sure to deploy the certificate? ',
        ssl: 'Certificate',
        dnsAccountManage: 'DNS Account',
        renewSSL: 'Renew',
        renewHelper: 'Are you sure to renew the certificate? ',
        renewSuccess: 'Renew Certificate',
        config: 'Configuration',
        enableHTTPS: 'Enable HTTPS',
        aliasHelper: 'Path Name is the folder name of the website directory',
        lastBackupAt: 'last backup time',
        null: 'none',
        nginxConfig: 'Nginx configuration',
        websiteConfig: 'Website Settings',
        basic: 'Basic',
        source: 'Configuration',
        security: 'Security',
        backup: 'Backup',
        log: 'Log',
        nginxPer: 'Performance Tuning',
        neverExpire: 'Never Expire',
        protocol: 'Protocol',
        setDefault: 'Set as default',
        default: 'Default',
        deleteHelper: 'Related application status is abnormal, please check',
        toApp: 'Go to the installed list',
        cycle: 'Cycle',
        frequency: 'Frequency',
        ccHelper:
            'Accumulatively request the same URL more than {1} times within {0} seconds, trigger CC defense, block this IP',
        seconds: 'seconds',
        count: 'times',
        mustSave: 'The modification needs to be saved to take effect',
        fileExt: 'file extension',
        fileExtBlock: 'file extension blacklist',
        value: 'value',
        enable: 'Enable',
        proxyAddress: 'Proxy Address',
        proxyHelper: 'Example: http://127.0.0.1:8080',
        forceDelete: 'Force Delete',
        forceDeleteHelper:
            'Forced deletion will ignore errors generated during the deletion process and eventually delete metadata',
        deleteAppHelper: 'Delete associated applications and application backups at the same time',
        deleteBackupHelper: 'Also delete website backup',
        deleteConfirmHelper:
            'The delete operation cannot be rolled back, please enter <span style="color:red"> "{0}" </span> to delete',
        staticPath: 'Corresponding main directory:',
        limit: 'Scheme',
        blog: 'Forum/Blog',
        imageSite: 'Picture Site',
        downloadSite: 'Download Site',
        shopSite: 'Mall',
        doorSite: 'Portal',
        qiteSite: 'Enterprise',
        videoSite: 'Video',
        errLog: 'Error Log',
        accessLog: 'Website Log',
        stopHelper:
            'After stopping the site, it will not be able to access normally, and the user will display the stop page of the current site when visiting. Do you want to continue? ',
        startHelper:
            'After enabling the site, users can access the content of the site normally, do you want to continue? ',
        sitePath: 'Website Directory',
        siteAlias: 'Site Path Name',
        primaryPath: 'Main directory',
        folderTitle: 'The main directory of the website mainly contains four folders',
        wafFolder: 'Firewall Rules',
        indexFolder: 'Website root directory',
        logFoler: 'website log',
        sslFolder: 'Website certificate',
        enableOrNot: 'Enable',
        oldSSL: 'Select an existing certificate',
        manualSSL: 'manually import certificate',
        select: 'Select',
        selectSSL: 'Select Certificate',
        privateKey: 'Key (KEY)',
        certificate: 'Certificate (PEM format)',
        HTTPConfig: 'HTTP Options',
        HTTPSOnly: 'Disable HTTP',
        HTTPToHTTPS: 'Access HTTP automatically jumps to HTTPS',
        HTTPAlso: 'HTTP can be accessed directly',
        sslConfig: 'SSL options',
        disbaleHTTTPS: 'Disable HTTPS',
        disbaleHTTTPSHelper:
            'Disabling HTTPS will delete the certificate related configuration, Do you want to continue?',
        SSLHelper:
            'Note: Do not use SSL certificates for illegal websites \n If HTTPS access cannot be used after opening, please check whether the security group has correctly released port 443',
        SSLConfig: 'Certificate Settings',
        SSLProConfig: 'SSL protocol settings',
        supportProtocol: 'Supported protocol version',
        encryptionAlgorithm: 'Rncryption Algorithm',
        notSecurity: '(not safe)',
        encryptHelper:
            "Let's Encrypt has a frequency limit for issuing certificates, but it is sufficient to meet normal needs. Too frequent operations will cause issuance failure. For specific restrictions, please see <a target='_blank' href='https://letsencrypt.org/zh-cn/docs /rate-limits/'>official document</a> ",
        ipValue: 'Value',
        ext: 'file extension',
        wafInputHelper: 'Input data by line, one line',
        data: 'data',
        ever: 'permanent',
        nextYear: 'One year later',
        noLog: 'There are currently no logs...',
        defaultServer: 'Default Site',
        noDefaulServer: 'Not set',
        defaultServerHelper:
            'After setting the default site, all unbound domain names and IPs are directed to the default site\n which can effectively prevent malicious analysis',
        restoreHelper: 'Are you sure to restore using this backup?',
        websiteDeploymentHelper: 'Create a website using an application deployed from 1Panel',
        websiteStatictHelper: 'Create a website directory on the host',
        websiteProxyHelper:
            'The proxy has existing services, for example, the machine has installed the halo service using port 8080, then the proxy address is http://127.0.0.1:8080',
        runtimeProxyHelper: 'Use runtime created from 1Panel',
        runtime: 'Runtime',
        deleteRuntimeHelper:
            'The Runtime application needs to be deleted together with the website, please handle it with caution',
        proxyType: 'Listening Network Type',
        unix: 'Unix Network',
        tcp: 'TCP/IP Network',
        phpFPM: 'FPM Config',
        phpConfig: 'PHP Config',
        updateConfig: 'Update Config',
        isOn: 'On',
        isOff: 'Off',
        rewrite: 'Pseudo Static',
        rewriteMode: 'Scheme',
        current: 'Current',
        rewriteHelper:
            'If the website cannot be accessed normally after setting pseudo-static, please try to set it back to default',
        runDir: 'Run Directory',
        runDirHelper:
            'Some programs need to specify a secondary directory as the running directory, e.g. ThinkPHP5, Laravel',
        runUserHelper:
            'For websites deployed through the PHP runtime environment, all files, folder owners, and user groups under the index and subdirectories need to be set to 1000, command: chown -R 1000:1000 index',
        userGroup: 'User/Group',
        user: 'User',
        uGroup: 'Group',
        proxyPath: 'Proxy Path',
        proxyPass: 'Target URL',
        cache: 'Cache',
        status: 'Status',
        createProxy: 'Create reverse proxy',
        editProxy: 'Edit reverse proxy',
        cacheTime: 'Cache time',
        enableCache: 'Open cache',
        proxyHost: 'Send domain name',
        disabled: 'Stopped',
        startProxy: 'Start Reverse proxy',
        stopProxy: 'Stop the Reverse proxy',
        proxyFile: 'Source',
        proxyHelper1: 'When accessing this directory, the content of the target URL will be returned and displayed',
        proxyPassHelper: 'The proxy site must be a URL that can be accessed normally',
        proxyHostHelper: 'Add the domain name to the request header and pass it to the proxy server',
        replacementHelper: 'Up to 5 replacements can be added, please leave blank if no replacement is required',
        modifier: 'Matching rules',
        modifierHelper: 'Example: = exact match, ~ regular match, ^~ match the beginning of the path, etc',
        replace: 'Text Replacement',
        addReplace: 'Add text replacement',
        replaced: 'Search string (cannot be empty)',
        replaceText: 'Replace with string',
        replacedErr: 'The search string cannot be empty',
        replacedErr2: 'The search string cannot be repeated',
        basicAuth: 'Password Access',
        editBasicAuthHelper:
            'The password is asymmetrically encrypted and cannot be echoed. Editing needs to reset the password',
        createPassword: 'Generate password',
    },
    php: {
        short_open_tag: 'Short tag support',
        max_execution_time: 'Maximum script execution time',
        max_input_time: 'Maximum input time',
        memory_limit: 'Script memory limit',
        post_max_size: 'POST data maximum size',
        file_uploads: 'Whether to allow uploading files',
        upload_max_filesize: 'The maximum size allowed to upload files',
        max_file_uploads: 'The maximum number of files allowed to be uploaded at the same time',
        default_socket_timeout: 'Socket timeout',
        error_reporting: 'Error level',
        display_errors: 'Whether to output detailed error information',
        cgi_fix_pathinfo: 'Whether to open pathinfo',
        date_timezone: 'Time zone',
        second: 'Second',
    },
    nginx: {
        serverNamesHashBucketSizeHelper: 'The hash table size of the server name',
        clientHeaderBufferSizeHelper: 'The header buffer size requested by the client',
        clientMaxBodySizeHelper: 'Maximum upload file',
        keepaliveTimeoutHelper: 'Connection timeout',
        gzipMinLengthHelper: 'minimum compressed file',
        gzipCompLevelHelper: 'compression rate',
        gzipHelper: 'Whether to enable compressed transmission',
        connections: 'Active connections',
        accepts: 'Total connections (accepts)',
        handled: 'Total number of handshakes (handled)',
        requests: 'Total number of handshakes (requests)',
        reading: 'Number of requests (Reading)',
        writing: 'Number of Responses (Writing)',
        waiting: 'resident process (Waiting)',
        status: 'Current Status',
        nginxConfig: 'OpenResty Settings',
        configResource: 'Configuration',
        saveAndReload: 'Save and Reload',
    },
    ssl: {
        create: 'Create Certificate',
        provider: 'Type',
        manualCreate: 'manually created',
        acmeAccount: 'Acme Account',
        resolveDomain: 'Resolve domain name',
        err: 'Error',
        value: 'record value',
        type: 'Type',
        dnsResolveHelper: 'Please go to the DNS resolution service provider to add the following resolution records:',
        detail: 'Details',
        msg: 'Information',
        ssl: 'Certificate',
        key: 'Private Key',
        startDate: 'Effective Time',
        organization: 'issuing organization',
        renewConfirm: 'Are you sure to renew? ',
        autoRenew: 'Automatic renewal',
        autoRenewHelper: 'Automatic renewal 7 days from the expiration time',
        renewSuccess: 'Renewal succeeded',
        renewWebsite:
            'This certificate has been associated with the following websites, and the renewal will be applied to these websites simultaneously',
    },
    firewall: {
        notSupport:
            'No system firewall detected (firewalld or ufw). Please refer to the official documentation for installation.',
        ccDeny: 'CC Protection',
        ipWhiteList: 'IP Whitelist',
        ipBlockList: 'IP Blacklist',
        fileExtBlockList: 'File extension blacklist',
        urlWhiteList: 'URL Whitelist',
        urlBlockList: 'URL Blacklist',
        argsCheck: 'GET parameter check',
        postCheck: 'POST parameter verification',
        cookieBlockList: 'Cookie Blacklist',

        firewall: 'Firewall',
        dockerHelper:
            'Linux firewall {0} cannot disable Docker port mapping, you need to disable iptables in Docker configuration.',
        quickJump: 'Quick jump',
        used: 'Used',
        unUsed: 'Unused',
        firewallHelper: '{0} System firewall',
        firewallNotStart: 'The system firewall is not enabled at present, please enable it first!',
        stopFirewallHelper:
            'After the system firewall is disabled, the server loses security protection. Do you want to continue?',
        startFirewallHelper:
            'After the firewall is enabled, the server security can be better protected. Do you want to continue?',
        noPing: 'Disable ping',
        noPingTitle: 'Disable ping',
        noPingHelper: 'If the ping function is disabled, the server cannot be pinged. Do you want to continue?',
        onPingHelper: 'If you disable ping, hackers may discover your server. Do you want to continue?',
        protocol: 'Protocol',
        port: 'Port',
        changeStrategy: 'Change the {0} strategy',
        changeStrategyIPHelper1:
            'Change the IP address strategy to [deny]. After the IP address is set, access to the server is prohibited. Do you want to continue?',
        changeStrategyIPHelper2:
            'Change the IP address strategy to [allow]. After the IP address is set, normal access is restored. Do you want to continue?',
        changeStrategyPortHelper1:
            'Change the port policy to [drop]. After the port policy is set, external access is denied. Do you want to continue?',
        changeStrategyPortHelper2:
            'Change the port policy to [accept]. After the port policy is set, normal port access will be restored. Do you want to continue?',
        stop: 'Stop',
        portFormatError: 'Please enter the correct port information!',
        portHelper1: 'Multiple ports, e.g. 8080 and 8081',
        portHelper2: 'Range port, e.g. 8080-8089',
        changeStrategyHelper:
            'Change [{1}] {0} strategy to [{2}]. After setting, {0} will access {2} externally. Do you want to continue?',
        portHelper: 'Multiple ports can be entered, e.g. 80,81, or range ports, e.g. 80-88',
        strategy: 'Strategy',
        accept: 'Accept',
        drop: 'Drop',
        source: 'Source',
        anyWhere: 'AnyWhere',
        address: 'Specified IP',
        allow: 'Allow',
        deny: 'Deny',
        addressFormatError: 'Please enter a valid ip address!',
        addressHelper1: 'Multiple IP please separated with ",", e.g. 172.16.10.11, 172.16.10.99',
        addressHelper2: 'IP segment, e.g. 172.16.10.0/24',
        allIP: 'All IP',
        portRule: 'Port rule',
        ipRule: 'IP rule',
    },
    runtime: {
        runtime: 'Runtime',
        image: 'Image',
        workDir: 'Working directory',
        create: 'Create runtime',
        name: 'Name',
        resource: 'Source',
        appstore: 'App Store',
        local: 'Local',
        app: 'Application',
        localHelper: 'The local operating environment needs to be installed by itself',
        version: 'Version',
        status: 'Status',
        versionHelper: 'PHP version, e.g. v8.0',
        buildHelper:
            'The more extensions you select, the more CPU will be occupied during the image making process, so avoid selecting all extensions,If there is no extension you want, you can manually enter it and select it',
        openrestryWarn: 'PHP needs to be upgraded to OpenResty to version 1.21.4.1 or later to use',
        toupgrade: 'To Upgrade',
        edit: 'Edit runtime',
        extendHelper:
            'Extensions that do not exist in the list can be selected after manual input, for example: input sockets, and then select the first one in the drop-down list',
        rebuildHelper:
            'After editing the extension, you need to go to the [App Store-Installed] page to rebuild the PHP application to take effect',
    },
};

export default {
    ...fit2cloudEnLocale,
    ...message,
};
