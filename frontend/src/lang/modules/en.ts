export default {
    commons: {
        button: {
            create: 'Create',
            add: 'Add',
            save: 'Save',
            set: 'Reset',
            sync: 'Sync',
            delete: 'Delete',
            edit: 'Edit',
            confirm: 'Confirm',
            cancel: 'Cancel',
            reset: 'Reset',
            conn: 'Connect',
            clean: 'Clean',
            login: 'Login',
            close: 'Close',
            saveAndEnable: 'Save and enable',
        },
        search: {
            timeStart: 'Time start',
            timeEnd: 'Time end',
            timeRange: 'To',
            dateStart: 'Date start',
            dateEnd: 'Date end',
        },
        table: {
            name: 'Name',
            group: 'Group',
            createdAt: 'Creation Time',
            date: 'Date',
            updatedAt: 'Update Time',
            operate: 'Operations',
            message: 'Message',
            description: 'Description',
        },
        msg: {
            delete: 'This operation cannot be rolled back. Do you want to continue',
            deleteTitle: 'Delete',
            deleteSuccess: 'Delete Success',
            loginSuccess: 'Login Success',
            requestTimeout: 'The request timed out, please try again later',
            operationSuccess: 'Successful operation',
            infoTitle: 'Hint',
            sureLogOut: 'Are you sure you want to log out?',
            createSuccess: 'Create Success',
            updateSuccess: 'Update Success',
            uploadSuccess: 'Update Success',
        },
        login: {
            captchaHelper: 'Please enter the verification code',
        },
        rule: {
            username: 'Please enter a username',
            password: 'Please enter a password',
            requiredInput: 'Please enter the required fields',
            requiredSelect: 'Please select the required fields',
            commonName: 'Support English, Chinese, numbers, .-_, length 1-30',
            email: 'Email format error',
            ip: 'Please enter the correct IP address',
            port: 'Please enter the correct port',
        },
        res: {
            paramError: 'The request failed, please try again later!',
            forbidden: 'The current user has no permission',
            serverError: 'Service exception',
            notFound: 'The resource does not exist',
            commonError: 'The request failed',
        },
        header: {
            language: 'Internationalization',
            zh: '简体中文',
            en: 'English',
            theme: 'Layout Settings',
            globalTheme: 'Global',
            themeColor: 'Theme Color',
            darkTheme: 'Dark Theme',
            personalData: 'Personal Data',
            changePassword: 'Change Password',
            logout: 'Logout',
        },
    },
    auth: {
        username: 'Username',
        email: 'Email',
        password: 'Password',
    },
    menu: {
        home: 'Overview',
        demo: 'Example',
        terminal: 'Terminal',
        apps: 'App Store',
        website: 'Website',
        project: 'Project',
        config: 'Config',
        firewall: 'Firewall',
        database: 'Database',
        container: 'Container',
        plan: 'Planned Task',
        host: 'Host',
        security: 'Security',
        systemConfig: 'Panel Settings',
        toolbox: 'Toolbox',
        monitor: 'Monitor',
        operations: 'Operation Records',
        files: 'File Management',
        settings: 'Setting',
    },
    home: {
        welcome: 'Welcome',
    },
    tabs: {
        more: 'More',
        closeCurrent: 'Close current',
        closeOther: 'Close other',
        closeAll: 'Close All',
    },
    header: {
        componentSize: 'Component size',
        language: 'Language',
        theme: 'theme',
        layoutConfig: 'Layout config',
        primary: 'primary',
        darkMode: 'Dark Mode',
        greyMode: 'Grey mode',
        weakMode: 'Weak mode',
        fullScreen: 'Full Screen',
        exitFullScreen: 'Exit Full Screen',
        personalData: 'Personal Data',
        changePassword: 'Change Password',
        logout: 'Logout',
    },
    monitor: {
        avgLoad: 'Average load',
        loadDetail: 'Load detail',
        resourceUsage: 'Resource utilization rate',
        min: 'Minutes',
        read: 'Read',
        write: 'Write',
        count: 'Times',
        readWriteCount: 'Read or write Times',
        readWriteTime: 'Read or write delay',
        today: 'Today',
        yestoday: 'Yestoday',
        lastNDay: 'Last {0} day',
        memory: 'Memory',
        disk: 'Disk',
        network: 'Network',
        up: 'Up',
        down: 'Down',
    },
    terminal: {
        conn: 'connection',
        testConn: 'Test connection',
        saveAndConn: 'Save and Connect',
        connTestOk: 'Connection information available',
        hostList: 'Host information',
        createConn: 'Create a connection',
        createGroup: 'Create a group',
        expand: 'Expand all',
        fold: 'All contract',
        batchInput: 'Batch input',
        quickCommand: 'quick command',
        groupDeleteHelper:
            'After the group is removed, all connections in the group will be migrated to the default group. Confirm the information',
        quickCmd: 'Quick command',
        addHost: 'Add Host',
        localhost: 'Localhost',
        name: 'Name',
        port: 'Port',
        user: 'User',
        authMode: 'Auth Mode',
        passwordMode: 'password',
        keyMode: 'PrivateKey',
        password: 'Password',
        key: 'Private Key',
        emptyTerminal: 'No terminal is currently connected',
    },
    operations: {
        detail: {
            users: 'User',
            hosts: 'Host',
            groups: 'Group',
            commands: 'Command',
            auth: 'User',
            login: ' login',
            logout: ' logout',
            post: ' create',
            put: ' update',
            update: ' update',
            delete: ' delete',
            del: 'delete',
        },
        operatoin: 'operatoin',
        status: 'status',
        request: 'request',
        response: 'response',
    },
    file: {
        dir: 'folder',
        upload: 'Upload',
        download: 'download',
        fileName: 'file name',
        search: 'find',
        mode: 'permission',
        owner: 'owner',
        file: 'file',
        remoteFile: 'remote download',
        share: 'Share',
        sync: 'Data synchronization',
        size: 'size',
        updateTime: 'Modification time',
        open: 'open',
        rename: 'rename',
        role: 'authority',
        info: 'Properties',
        linkFile: 'soft link file',
        terminal: 'terminal',
        shareList: 'Share List',
        zip: 'compress',
        user: 'User',
        group: 'user group',
        path: 'path',
        public: 'public',
        setRole: 'Set permissions',
        link: 'Whether to link',
        rRole: 'read',
        wRole: 'Write',
        xRole: 'executable',
        name: 'name',
        compress: 'compress',
        deCompress: 'Decompress',
        compressType: 'compression format',
        compressDst: 'compression path',
        replace: 'Overwrite existing file',
        compressSuccess: 'Compression successful',
        deCompressSuccess: 'Decompression succeeded',
        deCompressDst: 'Decompression path',
        linkType: 'Link type',
        softLink: 'soft link',
        hardLink: 'hard link',
        linkPath: 'Link path',
        selectFile: 'Select file',
        downloadSuccess: 'Download successful',
        downloadUrl: 'download URL',
        downloadStart: 'Download started!',
        moveStart: 'Move start',
        move: 'Move',
        copy: 'Cpoy',
        calculate: 'Calculate',
        canNotDeCompress: 'Can not DeCompress this File',
        uploadSuccess: 'Upload Success!',
        downloadProcess: 'Download Process',
        downloading: 'Downloading...',
    },
    setting: {
        panel: 'Panel',
        emailHelper: 'For password retrieval',
        title: 'Panel alias',
        theme: 'Theme',
        dark: 'Dark',
        light: 'Light',
        language: 'Language',
        languageHelper:
            'By default, it follows the browser language. This parameter takes effect only on the current browser',
        sessionTimeout: 'Timeout',
        sessionTimeoutHelper:
            'If you do not operate the panel for more than {0} seconds, the panel automatically logs out',
        syncTime: 'Synchronization time',
        changePassword: 'Password change',
        oldPassword: 'Original password',
        newPassword: 'New password',
        retryPassword: 'Confirm password',
        safe: 'Safe',
        panelPort: 'Panel port',
        portHelper:
            'The recommended port range is 8888 to 65535. Note: If the server has a security group, permit the new port from the security group in advance',
        safeEntrance: 'Security entrance',
        safeEntranceHelper:
            'Panel management portal. You can log in to the panel only through a specified security portal, for example, / 89DC6AE8',
        passwordTimeout: 'Password expiration Time',
        timeoutHelper:
            '[ {0} days ] The panel password is about to expire. After the expiration, you need to reset the password',
        complexity: 'Password complexity verification',
        complexityHelper:
            'The password must contain at least eight characters and contain at least three uppercase letters, lowercase letters, digits, and special characters',
        mfa: 'MFA',
        mfaHelper1: 'Download a MFA verification mobile app such as:',
        mfaHelper2: 'Scan the following QR code using the mobile app to obtain the 6-digit verification code',
        mfaHelper3: 'Enter six digits from the app',
        enableMonitor: 'Enable',
        storeDays: 'Expiration time (day)',
        cleanMonitor: 'Clearing monitoring records',
        message: 'Message',
        messageType: 'Message type',
        email: 'Email',
        wechat: 'WeChat',
        dingding: 'DingDing',
        closeMessage: 'Turning off Message Notification',
        emailServer: 'Service name',
        emailAddr: 'Service address',
        emailSMTP: 'SMTP code',
        secret: 'Secret',
    },
};
